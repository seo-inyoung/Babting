[{"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\App.js":"3","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\MenuBar.js":"4","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchTotal.js":"5","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\ReviewTotal.js":"6","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchForm.js":"7","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\GridView.js":"8","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\ListView.js":"9","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\MapView.js":"10","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewRead.js":"11","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewView.js":"12","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\RiviewWrite.js":"13","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\contents.js":"14","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\review.js":"15"},{"size":651,"mtime":1639273804425,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1639259717018,"results":"18","hashOfConfig":"17"},{"size":1167,"mtime":1639411952294,"results":"19","hashOfConfig":"17"},{"size":1973,"mtime":1639312521542,"results":"20","hashOfConfig":"17"},{"size":418,"mtime":1639284691995,"results":"21","hashOfConfig":"17"},{"size":903,"mtime":1639419456399,"results":"22","hashOfConfig":"17"},{"size":8402,"mtime":1639411663187,"results":"23","hashOfConfig":"17"},{"size":1113,"mtime":1639398876095,"results":"24","hashOfConfig":"17"},{"size":1162,"mtime":1639398876097,"results":"25","hashOfConfig":"17"},{"size":4998,"mtime":1639398876098,"results":"26","hashOfConfig":"17"},{"size":1115,"mtime":1639398876088,"results":"27","hashOfConfig":"17"},{"size":1799,"mtime":1639418291954,"results":"28","hashOfConfig":"17"},{"size":3558,"mtime":1639419827526,"results":"29","hashOfConfig":"17"},{"size":895,"mtime":1639259717020,"results":"30","hashOfConfig":"17"},{"size":761,"mtime":1639259717021,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1cky060",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\index.js",["74"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport axios from \"axios\";\r\n// useEffect(()=> {\r\n//   axios.get('/api')\r\n//   .then(res => console.log(res))\r\n//   .catch()\r\n// })\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\App.js",["77","78"],"\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; //부트스트랩 적용\r\n//import {Button} from \"react-bootstrap\";\r\nimport MenuBar from './component/MenuBar';\r\nimport axios from \"axios\";\r\nimport React, {useState,useEffect} from 'react';\r\nlet rule = [];\r\nfunction App() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n   useEffect(\r\n     async() => {\r\n       try{\r\n       const result = await axios.get(\"/restaurant\");\r\n       rule = result.data; //Array.from(JSON.stringify(result.data))\r\n      setRestaurants(rule);\r\n      }\r\n       catch(e) { console.log(e.message);}\r\n     }\r\n   )\r\n  // componentDidMount() {\r\n  //   this.callApi()\r\n  //     .then(res => this.setState(...this.state, {restaurants:res})) //this.setState({restaurants:res})\r\n  //     .catch(err => console.log(err));\r\n  // }\r\n\r\n  // callApi = async () => {\r\n  //   const response = await fetch('/api/restaurants');\r\n  //   const body = await response.json();\r\n  //   console.log(body);\r\n  //   return body;\r\n  // }\r\n  return (\r\n    \r\n    <div className=\"App Container\">\r\n      <MenuBar restaurants = {restaurants}/>\r\n    </div>\r\n    \r\n  ); }\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\MenuBar.js",["79","80","81"],"import {Button} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport SearchTotal from \"./SearchPage/SearchTotal\";\r\nimport ReviewTotal from \"./ReviewPage/ReviewTotal\";\r\nimport styles from '../css/MenuBar.css'; //안됨\r\nimport styled from 'styled-components'; //css할수있도록\r\n//const 이름 = styled.div ''; 형식 \r\n\r\nconst Logo = styled.div`\r\n@media screen and (max-width:550px ) {\r\n    display:none;\r\n}\r\n`; \r\n\r\nfunction MenuBar(props) {\r\n    const {restaurants} = props;\r\n    //console.log(restaurants);\r\n    const [view, setView] = useState(true);\r\n    const MenuContainer = {\r\n        margin:'30px 0',\r\n    }\r\n    const SelectBtn = {\r\n        backgroundColor: \"white\",\r\n        border:\"none\",\r\n        borderBottom: '2px solid red',\r\n        //borderRadius: '7px',\r\n        marginLeft: \"10px\",\r\n        width: \"70px\",\r\n        transition: \"1s\",\r\n        outline: \"none\"\r\n        \r\n    }\r\n\r\n    const nonSelectBtn = {\r\n        backgroundColor: \"white\",\r\n        //border: '1px solid black',\r\n        //borderRadius: '7px',\r\n        border:\"none\",\r\n        borderBottom: '2px solid white',\r\n        marginLeft: \"10px\",\r\n        width: \"70px\",\r\n        transition: \"0.5s\",\r\n        outline:\"none\"\r\n    }\r\n    const border = {\r\n        border: '1px solid black'\r\n    }\r\n    //component 구현하는거\r\n    return(\r\n        <>\r\n        <div className=\"row\" style={MenuContainer}>\r\n            <Logo><span >logo</span></Logo>\r\n            <div className=\"MenuBar\" >\r\n                <button style={view?SelectBtn:nonSelectBtn} \r\n                onClick={() => setView(true)} \r\n                value=\"search\">검색</button>\r\n\r\n                <button style={view?nonSelectBtn:SelectBtn} \r\n                onClick={() => setView(false)} \r\n                value=\"review\">후기</button>\r\n            </div>\r\n        </div>\r\n        {view ? <SearchTotal restaurants = {restaurants}/> : <ReviewTotal/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MenuBar;","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchTotal.js",["82","83","84"],"import React from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ListView from \"./View/ListView\";\r\nimport GridView from './View/GridView';\r\nimport MapView from \"./View/MapView\";\r\n\r\nfunction SearchTotal (props) {\r\n    const {restaurants} = props;\r\n    //console.log(restaurants);\r\n    return (\r\n        <>\r\n        <SearchForm restaurants={restaurants}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchTotal;","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\ReviewTotal.js",["85","86","87","88"],"import React, {useRef,useState,createContext} from \"react\";\r\nimport styled from 'styled-components';\r\nimport ReviewView from \"./View/ReviewView\";\r\nimport ReviewRead from \"./View/ReviewRead\";\r\nimport ReviewWrite from \"./View/RiviewWrite\";\r\nconst ModeSet = React.createContext(true);\r\n//리뷰 읽기/쓰기 모드 왔다 갔다 할 수 있는 버튼\r\nconst ReviewBtnStyle = styled.div`\r\nbutton{\r\n    background-color : white;\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 30px;\r\n}\r\n`;\r\nfunction ReviewTotal () {\r\n    const [mode, setMode] = useState(true);\r\n    const ReviewModeChange = () => {\r\n        mode?setMode(false):setMode(true)\r\n    }\r\n return(\r\n     <> \r\n        <ReviewBtnStyle>\r\n            <button onClick={ReviewModeChange}>+</button>\r\n        </ReviewBtnStyle>\r\n        {mode?<ReviewRead/>:<ReviewWrite/>}\r\n     </>\r\n );\r\n}\r\n\r\nexport default ReviewTotal;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchForm.js",["89","90","91","92","93","94","95","96","97","98","99","100"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport ListView from \"./View/ListView\"; //그리드 뷰, 리스트 뷰, 맵 뷰 컴포넌트\r\nimport GridView from \"./View/GridView\";\r\nimport MapView from \"./View/MapView\";\r\nimport GridIcon from \"../img/grid.png\"; //그리드,리스트,맵 아이콘 경로\r\nimport ListIcon from \"../img/list.png\";\r\nimport MapIcon from \"../img/maps.png\";\r\nimport styled from \"styled-components\"; //css 쓸 수 있게\r\nimport Contents from \"../../static_data/contents\"; //맛집 data 정리 해놓은 파일\r\nimport axios from \"axios\"; //axios\r\n\r\n//ViewBtn input 테두리 좀 더 다듬기 & 클릭하면 색깔 변하게\r\n//FilterBtn\r\n\r\n//filter\r\nconst situation = [\"혼밥\", \"모임\", \"특별한 날\", \"회식\"];\r\nconst preference = [\r\n  \"비건\",\r\n  \"육류\",\r\n  \"해산물\",\r\n  \"국물\",\r\n  \"매운 것\",\r\n  \"반주\",\r\n  \"디저트\",\r\n];\r\n\r\n//style\r\nconst FilterBox = styled.div`\r\n  .filterBox {\r\n    width: 50%;\r\n    position: fixed;\r\n    background: white;\r\n    border-radius:15px;\r\n    top: 25%;\r\n    left: 25%;\r\n    z-index: 1;\r\n  }\r\n  .filterTitle {\r\n    padding:15px 0;\r\n    border-bottom: 2px solid red;\r\n  }\r\n  .offbtn {\r\n    background: white;\r\n  }\r\n  .onbtn {\r\n    background: gray;\r\n  }\r\n  @media screen and (max-width: 958px) {\r\n    .filterBox {\r\n      top: 25%;\r\n      left: 5%;\r\n      width: 90%;\r\n      padding: 0 10%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FilterBtn = styled.div`\r\n  input {\r\n    border: 1px solid #eeeeee;\r\n    border-radius: 30px;\r\n    outline: none;\r\n  }\r\n  button {\r\n    width: 70px;\r\n  }\r\n  @media screen and (max-width: 958px) {\r\n    input {\r\n      width: 400px;\r\n    }\r\n  }\r\n`;\r\nconst ViewBtn = styled.div`\r\n  input {\r\n    width: 25px;\r\n    padding: 2px;\r\n    margin: 1px 0;\r\n    border: 1px black solid;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst imgStyle = {\r\n  width: \"25px\",\r\n};\r\nlet FilterList = {\r\n  \"btn-혼밥\": 0,\r\n  \"btn-모임\": 0,\r\n  \"btn-특별한 날\": 0,\r\n  \"btn-회식\": 0,\r\n  \"btn-비건\": 0,\r\n  \"btn-육류\": 0,\r\n  \"btn-해산물\": 0,\r\n  \"btn-국물\": 0,\r\n  \"btn-매운 것\": 0,\r\n  \"btn-반주\": 0,\r\n  \"btn-디저트\": 0,\r\n};\r\nfunction FilterBtns({ filter }) {\r\n  const Btntoggle = () => {\r\n    const btn = document.getElementById(`btn-${filter}`);\r\n    if (FilterList[btn.id] === 0) {\r\n      FilterList = { ...FilterList, [btn.id]: 1 };\r\n      //console.log(FilterList);\r\n      btn.className = \"onbtn\";\r\n      //btn.style.background = \"gray\";\r\n    } else {\r\n      FilterList = { ...FilterList, [btn.id]: 0 };\r\n      //console.log(FilterList);\r\n      btn.className = \"offbtn\";\r\n      //btn.style.background = \"white\";\r\n    }\r\n  };\r\n  return (\r\n    <button\r\n      onClick={Btntoggle}\r\n      id={`btn-${filter}`}\r\n      className={FilterList[`btn-${filter}`] === 1 ? \"onbtn\" : \"offbtn\"}\r\n    >\r\n      {filter}\r\n    </button>\r\n  );\r\n}\r\nfunction FilterBoxTool(props) {\r\n  const {restaurants} = props;  \r\n  return (\r\n    <FilterBox>\r\n      <div className=\"filterBox\">\r\n        \r\n        <p className=\"filterTitle\">필터 설정</p>\r\n        <p>취향 필터</p>\r\n        {preference.map((filter) => (\r\n          <FilterBtns filter={filter} />\r\n        ))}\r\n        <br />\r\n        <br />\r\n        <p>상황 필터</p>\r\n        {situation.map((filter) => (\r\n          <FilterBtns filter={filter} />\r\n        ))}\r\n        <br />\r\n        <br />{\" \"}\r\n        <button id={\"closeBtn\"} onClick={()=>closefilter(restaurants)}>\r\n          Check\r\n        </button>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    </FilterBox>\r\n  );\r\n}\r\n\r\n//태그 창 열고 닫는 거\r\nconst closefilter = (props) => {\r\n  checkFilter = [];\r\n  //isTagData = [];\r\n  const filterbox = document.getElementById(\"filterTotalBox\");\r\n  filterbox.style.display = \"none\";\r\n  for (const key in FilterList) {\r\n    if (FilterList[key] === 1) {\r\n      checkFilter.push(key.slice(4));\r\n    }\r\n  }\r\n  const filterlook = document.getElementById(\"filterLook\");\r\n  filterlook.innerText = checkFilter;\r\n  \r\n  // if(checkFilter.length!==0){\r\n  //   props.map((content) => {\r\n  //     for(var i in checkFilter){\r\n  //       if(content.태그!=undefined){\r\n  //         if(content.태그.includes(checkFilter[i])){\r\n  //           if(!isTagData.includes(content)){\r\n  //             isTagData.push(content);\r\n  //           }              \r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   })\r\n  // }else{\r\n  //   props.map((content) => {\r\n  //     isTagData.push(content);\r\n  //   })\r\n  // }  \r\n  };\r\nconst openfilter = () => {\r\n  const filterbox = document.getElementById(\"filterTotalBox\");\r\n  filterbox.style.display = \"block\";\r\n};\r\n\r\n//실행\r\nlet checkFilter = [];\r\nlet isTagData = [];\r\nfunction SearchForm(props) {\r\n  useEffect(()=> {\r\n    const box = document.getElementById('filterTotalBox');\r\n    const checkFilterText = document.getElementById('filterLook');\r\n    let filterText ='';\r\n    if(checkFilter.length !== 0){\r\n      box.style.display = \"none\";\r\n      checkFilter.map((f) => {\r\n        filterText += f + ',';\r\n      })\r\n    }\r\n    checkFilterText.innerText = filterText;\r\n    //searchData();\r\n  },[]);\r\n  const {restaurants} = props;  \r\n  const dataInput = useRef();\r\n  const [data, setData] = useState({\r\n    View: \"map\",\r\n    result: [],\r\n  });\r\n  let resultData = [];\r\n  const searchData = () => {\r\n    const dataInfo = dataInput.current;\r\n    resultData = [];\r\n    isTagData = [];\r\n    if(checkFilter.length!==0){\r\n      restaurants.map((content) => {\r\n        for(var i in checkFilter){\r\n          if(content.태그!=undefined){\r\n            if(content.태그.includes(checkFilter[i])){\r\n              if(!isTagData.includes(content)){\r\n                isTagData.push(content);\r\n              }              \r\n            }\r\n          }\r\n        }\r\n      })\r\n    }else{\r\n      restaurants.map((content) => {\r\n        isTagData.push(content);\r\n      })\r\n    }\r\n    console.log(isTagData);\r\n    isTagData.map((content) => {\r\n      if (content.이름.includes(dataInfo.value)||\r\n          content.주소.includes(dataInfo.value)||\r\n          content.대표음식.includes(dataInfo.value)||\r\n          content.간단한설명.includes(dataInfo.value)\r\n      //dataInfo.value == content.name ||\r\n      //dataInfo.value == content.adress ||\r\n      //dataInfo.value == content.mainmenu\r\n      ) {\r\n        resultData.push(content);\r\n      } \r\n      else if(dataInfo.value==\"\"){\r\n        resultData.push(content);\r\n      } \r\n      // else if (dataInfo.value === \"\"&&checkFilter.length==0) {\r\n      //   resultData.push(content);\r\n      // }\r\n    });\r\n    setData({ ...data, result: resultData });\r\n  };\r\n  return (\r\n    <>\r\n      <FilterBtn>\r\n        <div className={\"row justify-content-center\"}>\r\n          <input\r\n            ref={dataInput}\r\n            className={\"col-md-4 col-xs-5\"}\r\n            placeholder=\"음식점 이름/먹고 싶은 메뉴를 입력해 보세요\"\r\n          />\r\n          <button className={\"col-md-1 col-xs-2\"} onClick={searchData}>\r\n            검색{\" \"}\r\n          </button>\r\n          <button className={\"col-md-1 col-xs-2\"} onClick={openfilter}>\r\n            필터{\" \"}\r\n          </button>\r\n        </div>{\" \"}\r\n      </FilterBtn>\r\n      <div className={\"ViewBtnContainer\"}>\r\n        <ViewBtn>\r\n          <input\r\n            type={\"image\"}\r\n            src={MapIcon}\r\n            className={\"col-md-1 col-xs-1\"}\r\n            onClick={() => setData({ ...data, View: \"map\" })}\r\n          />\r\n          <input\r\n            type={\"image\"}\r\n            src={ListIcon}\r\n            className={\"col-md-1 col-xs-1\"}\r\n            onClick={() => setData({ ...data, View: \"list\" })}\r\n          />\r\n          <input\r\n            type={\"image\"}\r\n            src={GridIcon}\r\n            className={\"col-md-1 col-xs-1\"}\r\n            onClick={() => setData({ ...data, View: \"grid\" })}\r\n          />\r\n        </ViewBtn>\r\n      </div>\r\n      <div>\r\n        <span>고른 태그: </span>\r\n        <span id=\"filterLook\"></span>\r\n      </div>\r\n      {data.View === \"grid\" ? (\r\n        <GridView contents={data.result} Data={data.ResultWord} />\r\n      ) : data.View === \"list\" ? (\r\n        <ListView contents={data.result} Data={data.ResultWord} />\r\n      ) : (\r\n        <MapView contents={data.result} Data={data.ResultWord} />\r\n      )}\r\n\r\n      <div id=\"filterTotalBox\">\r\n        <center>\r\n          <FilterBoxTool restaurants={restaurants}/>\r\n        </center>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SearchForm;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\GridView.js",["101","102"],"import { style } from \"dom-helpers\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GridViewStyle = styled.div`\r\n  .sample {\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (min-width: 958px) {\r\n    .sample {\r\n      width: 80%;\r\n    }\r\n  }\r\n`;\r\nconst ContentBoxStyle = {\r\n  border: \"1px solid gray\",\r\n  width: \"250px\",\r\n  height: \"250px\",\r\n  margin: \"25px\",\r\n  float: \"none\",\r\n  //margin : '0 auto'\r\n};\r\n\r\nfunction ContentBox({ content }) {\r\n  return (\r\n    <div style={ContentBoxStyle}>\r\n      <p>{content.img}</p>\r\n      <p>{content.이름}</p>\r\n      <p>{content.주소}</p>\r\n      <p>{content.대표음식}</p>\r\n      <p>{content.간단한설명}</p>\r\n    </div>\r\n  );\r\n}\r\n//속성으로 받아오는 contents는 contents.js에 있음.\r\nfunction GridView(props) {\r\n  const { contents, Data } = props;\r\n  return (\r\n    <GridViewStyle>\r\n      <div className={\"row justify-content-center sample\"}>\r\n        {contents.map((content) => (\r\n          <ContentBox content={content} key={content.id} />\r\n        ))}\r\n      </div>\r\n    </GridViewStyle>\r\n  );\r\n}\r\nexport default GridView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\ListView.js",["103","104"],"//import { useSSRSafeId } from '@react-aria/ssr'; //.?\r\n//import userEvent from '@testing-library/user-event';\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst contentBoxStyle = styled.div`\r\n  .contentBox:hover {\r\n    background: gray;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst ContentBoxStyle = {\r\n  border: \"1px solid gray\",\r\n  height: \"30px\",\r\n  float: \"none\",\r\n  //margin : '0 auto'\r\n};\r\nfunction ContentBox({ content }) {\r\n  //console.log(content);\r\n  //\r\n  return (\r\n    <div style={ContentBoxStyle} className=\"col-sm-11 col-md-8 contentBox\">\r\n      <p>\r\n      {content.이름} {content.주소} {content.대표음식} {content.간단한설명}{content.태그}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nfunction ListView(props) {\r\n  //console.log(props);\r\n  const { contents, Data } = props;\r\n\r\n  return (\r\n    <div className={\"row justify-content-center\"}>\r\n      <div style={ContentBoxStyle} className=\"col-sm-11 col-md-8 contentBox\"><p>음식점이름 주소 메인메뉴</p></div>\r\n      {contents.map((content) => (\r\n        <ContentBox content={content} key={content.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\MapView.js",["105","106","107","108","109","110"],"/*global kako */\r\n//https://developers.kakao.com/ api받아오기\r\n//https://cotist.tistory.com/3 참고\r\n//https://apis.map.kakao.com/web/sample/addMapCenterChangedEvent/ LatLng이랑 level 알아 올 수 있음\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {createContext} from 'react';\r\n\r\nconst MapViewStyle = styled.div`\r\n  #map {\r\n    width: 65%;\r\n    height: 450px;\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (max-width: 958px) {\r\n    #map {\r\n      width: 95%;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Map({contents}) {\r\n   useEffect(() => {\r\n     mapscript(contents);\r\n   },[]);\r\n  const mapscript = (contents) => {\r\n    let container = document.getElementById(\"map\");\r\n    let options = {\r\n      center: new window.kakao.maps.LatLng(\r\n        37.56284927225243,\r\n        126.97138694483239\r\n      ),\r\n      level: 8\r\n    };\r\n\r\n    //map\r\n    const map = new window.kakao.maps.Map(container, options);\r\n\r\n    contents.map((item) => {\r\n      // 마커를 생성합니다\r\n      //console.log(item)\r\n      const marker = new window.kakao.maps.Marker({\r\n        //마커가 표시 될 지도\r\n        map: map,\r\n        //마커가 표시 될 위치\r\n        position: new window.kakao.maps.LatLng(item.위도, item.경도),\r\n      \r\n      });\r\n      // allContent 변수를 선언해서 markerdata의 title,tag를 받아옴 맞나? ㅋㅋㅋㅋㅋ\r\n      var allContent = `<div><center><br/>${item.이름}<br/>${item.주소}<br/>${item.대표음식}</center></div>`;\r\n      // infowindow 선언 content:allContent로 다 띄울 수 있을 듯?\r\n      var infowindow = new window.kakao.maps.InfoWindow({\r\n        content: allContent\r\n      });\r\n      \r\n      //마커에 mouseover, mouseout 이벤트를 등록함\r\n      // 이벤트리스너로 클로저를 만들어줌\r\n      // 안만들어주면 마지막 마커에만 이벤트 등록됨 ㅇㅇ\r\n      window.kakao.maps.event.addListener(\r\n        marker,\r\n        \"mouseover\",\r\n        makeOverListener(map,marker, infowindow)\r\n\r\n      );\r\n      window.kakao.maps.event.addListener(\r\n        marker,\r\n        \"mouseout\",\r\n        makeOutListener(infowindow)\r\n      );\r\n    });\r\n    // 인포윈도우를 표시하는 클로저를 만드는 함수\r\n    function makeOverListener(map, marker, infowindow) {\r\n      return function() {\r\n        infowindow.open(map, marker);\r\n      };\r\n    }\r\n\r\n    // 인포윈도우를 닫는 클로저를 만드는 함수\r\n    function makeOutListener(infowindow) {\r\n      return function () {\r\n        infowindow.close();\r\n      };\r\n    }\r\n  };\r\n\r\n  return <div id=\"map\"></div> \r\n} \r\n//아니 왜 안됨? 진짜..\r\nfunction MapView(props) {\r\n  const {contents, Data} = props;\r\n  return (\r\n    <center>\r\n      <MapViewStyle>\r\n        <Map contents={contents} />\r\n      </MapViewStyle>\r\n    </center>\r\n  );\r\n}\r\n\r\nexport default MapView;\r\n\r\n// /*global kako */\r\n// //https://developers.kakao.com/ api받아오기\r\n// //https://cotist.tistory.com/3 참고\r\n// //https://apis.map.kakao.com/web/sample/addMapCenterChangedEvent/ LatLng이랑 level 알아 올 수 있음\r\n// import React, { useRef, useEffect } from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// const markerdata = [\r\n//   {\r\n//     title: \"클럽에반스\",\r\n//     lat: 37.55033897015321,\r\n//     lng: 126.9229336137093,\r\n//   },\r\n//   {\r\n//     title: \"치차티클럽\",\r\n//     lat: 37.57109940534566,\r\n//     lng: 127.01135026952784,\r\n//   },\r\n//   {\r\n//     title: \"TRVR Cafe\",\r\n//     lat: 37.53838839800507,\r\n//     lng: 126.99353635603627,\r\n//   },\r\n//   {\r\n//     title: \"용용선생\",\r\n//     lat: 37.55939806463767,\r\n//     lng: 127.03980732534552,\r\n//   },\r\n// ];\r\n\r\n// const MapViewStyle = styled.div`\r\n//   #map {\r\n//     width: 65%;\r\n//     height: 450px;\r\n//     margin: 0 auto;\r\n//   }\r\n//   @media screen and (max-width: 958px) {\r\n//     #map {\r\n//       width: 95%;\r\n//     }\r\n//   }\r\n// `;\r\n\r\n// function Map() {\r\n//   useEffect(() => {\r\n//     mapscript();\r\n//   }, []);\r\n\r\n//   const mapscript = () => {\r\n//     let container = document.getElementById(\"map\");\r\n//     let options = {\r\n//       center: new window.kakao.maps.LatLng(\r\n//         37.56284927225243,\r\n//         126.97138694483239\r\n//       ),\r\n//       level: 5,\r\n//     };\r\n\r\n//     //map\r\n//     const map = new window.kakao.maps.Map(container, options);\r\n\r\n//     markerdata.forEach((el) => {\r\n//       // 마커를 생성합니다\r\n//       new window.kakao.maps.Marker({\r\n//         //마커가 표시 될 지도\r\n//         map: map,\r\n//         //마커가 표시 될 위치\r\n//         position: new window.kakao.maps.LatLng(el.lat, el.lng),\r\n//         //마커에 hover시 나타날 title\r\n//         title: el.title,\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   return <div id=\"map\"></div>;\r\n// }\r\n\r\n// function MapView() {\r\n//   return (\r\n//     <center>\r\n//       <MapViewStyle>\r\n//         <Map />\r\n//       </MapViewStyle>\r\n//     </center>\r\n//   );\r\n// }\r\n\r\n// export default MapView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewRead.js",[],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewView.js",["111","112","113","114","115","116"],"import React, {useEffect, useRef,useState} from \"react\";\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst ReviewViewStyle = styled.div`\r\n.sample {\r\n    margin: 0 auto;\r\n}\r\n@media screen and (min-width:958px ) {\r\n    .sample {\r\n        width: 80%;\r\n    }\r\n}\r\n`;\r\nconst ContentBoxStyle = {\r\n    border:'1px solid gray',\r\n    width:'250px',\r\n    height:'250px',\r\n    margin: '25px',\r\n    float:'none',\r\n    //margin : '0 auto'\r\n}\r\n\r\nfunction ContentBox({review}) {\r\n    return (        \r\n        <div style={ContentBoxStyle}>\r\n            <p>{review.식당이름}</p>\r\n             <p>{review.제목}</p>\r\n             <p>{review.내용}</p>\r\n             <p><img src={review.이미지}/></p>\r\n        </div>\r\n        \r\n    );\r\n}\r\nlet role = [];\r\nfunction ReviewView(props) {\r\n    const [reviews, setReviews] = useState([]);\r\n    useEffect(\r\n        async() => {\r\n            try{\r\n                const review = await axios.get(\"/review\");\r\n                role = review.data;\r\n                console.log(role);\r\n                setReviews(role);\r\n            }catch(e){console.log(e.message);}\r\n        },[]\r\n    )\r\n    const {title} = props; //const {title} = props;\r\n    const naverUrl = 'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=';\r\n    return (\r\n        <>\r\n        <p>{title}</p>\r\n        <span><a href={naverUrl+title} target=\"_blank\">{title}</a></span> \r\n        <ReviewViewStyle>\r\n        <div className={\"row justify-content-center sample\"}>\r\n            {reviews.map((review) => {\r\n               if(review.식당이름.includes(title)||title==''){return <ContentBox review={review} key = {review.id}/>}\r\n            })}\r\n        </div>\r\n        </ReviewViewStyle>\r\n     </>\r\n    );\r\n}\r\n\r\nexport default ReviewView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\RiviewWrite.js",["117","118","119","120","121","122"],"import React, {useEffect, useRef,useState} from \"react\";\r\nimport styled from 'styled-components';\r\nimport axios from \"axios\";\r\nimport ReviewRead from \"./ReviewRead\";\r\n\r\n//stlye format\r\n// const ReviewBtnStyle = styled.div`\r\n// button{\r\n// background-color : white;\r\n// border-radius: 50%;\r\n// width: 50px;\r\n// height: 50px;\r\n// font-size: 30px;\r\n// }\r\n// `;\r\nconst closeRiviewWrite = false;\r\nconst RiviewForm = styled.div `\r\ntable {\r\n    width:50%;\r\n}\r\n.thumbnail{\r\n    margin-left: 70px;\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n\r\n.thumbnail img{\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\ntextarea{\r\n    height: 200px;\r\n    resize: none;\r\n}\r\n`;\r\n\r\nfunction ReviewWrite() {\r\n    const setThumbnail=(event)=> {\r\n        var reader = new FileReader();\r\n            reader.onload = function(event){\r\n            const imageContainer = document.getElementById('img-container'); \r\n            var img = document.createElement(\"img\");\r\n            img.setAttribute(\"id\",\"reviewimg\");\r\n            img.setAttribute(\"src\",event.target.result);\r\n            imageContainer.innerHTML = '';\r\n            imageContainer.appendChild(img);\r\n        };\r\n    \r\n    reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    const saveReview = () => {\r\n        const reviewtitle = document.getElementById('reviewTitle');\r\n        const reviewaddress = document.getElementById('reviewAddress');\r\n        const reviewcontent = document.getElementById('reviewContent');\r\n        const reviewimg = document.getElementById('img-container').firstChild;\r\n        //console.log(reviewimg.src);\r\n        const send = async() => {\r\n            try{\r\n                const result = await axios.post('/review', {\r\n                    제목:reviewtitle.value,\r\n                    식당이름:reviewaddress.value,\r\n                    내용:reviewcontent.value,\r\n                    이미지:`${reviewimg.src}`,\r\n                });\r\n            }catch(e) {\r\n                console.log(e.message);\r\n            }\r\n        }\r\n        send();  \r\n    }\r\n    //<form method=\"post\" encType = \"\" action=\"\"> </form>\r\n    //<input type=\"submit\" className=\"btn-primary pull-right\" value=\"후기 저장\"/>\r\n    return(\r\n        <center>\r\n        <RiviewForm>\r\n        \r\n        <table className=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th>음식점 후기 쓰기</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><input id={\"reviewTitle\"} type=\"text\" className=\"form-control\" placeholder=\"글 제목\" name=\"bbsTitle\" maxLength=\"50\"/></td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                    <td><input id={\"reviewAddress\"} type=\"text\" className=\"form-control\" placeholder=\"주소\" name=\"map\" maxLength=\"50\"/></td>\r\n                </tr>\r\n            \r\n                <tr>\r\n                    <td><textarea id={\"reviewContent\"} className=\"form-control\" placeholder=\"글 내용\" name=\"bbsContent\" maxLength=\"2048\"></textarea>\r\n                        <div id ={\"img-container\"} className=\"thumbnail\" ></div>\r\n                    </td>\r\n                    \r\n                </tr>\r\n                <tr>\r\n                    <td><input type=\"file\" name=\"fileName\" accept=\"image/*\" onChange={setThumbnail}/></td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n                <button onClick={saveReview}>후기 저장</button>\r\n                \r\n    \r\n    </RiviewForm>\r\n    </center>\r\n    );\r\n}\r\nexport default ReviewWrite;","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\contents.js",[],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\review.js",[],{"ruleId":"123","severity":1,"message":"124","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":13},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":11,"column":4,"nodeType":"125","endLine":11,"endColumn":13,"suggestions":"133"},{"ruleId":"131","severity":1,"message":"134","line":12,"column":6,"nodeType":"135","endLine":19,"endColumn":7},{"ruleId":"123","severity":1,"message":"136","line":1,"column":9,"nodeType":"125","messageId":"126","endLine":1,"endColumn":15},{"ruleId":"123","severity":1,"message":"137","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":14},{"ruleId":"123","severity":1,"message":"138","line":45,"column":11,"nodeType":"125","messageId":"126","endLine":45,"endColumn":17},{"ruleId":"123","severity":1,"message":"139","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"140","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"141","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":15},{"ruleId":"123","severity":1,"message":"142","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":22},{"ruleId":"123","severity":1,"message":"143","line":1,"column":32,"nodeType":"125","messageId":"126","endLine":1,"endColumn":45},{"ruleId":"123","severity":1,"message":"144","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":18},{"ruleId":"123","severity":1,"message":"145","line":6,"column":7,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"123","severity":1,"message":"146","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":13},{"ruleId":"123","severity":1,"message":"147","line":83,"column":7,"nodeType":"125","messageId":"126","endLine":83,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":200,"column":27,"nodeType":"135","messageId":"150","endLine":200,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":219,"column":33,"nodeType":"135","messageId":"150","endLine":219,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":221,"column":24,"nodeType":"153","messageId":"154","endLine":221,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":231,"column":33,"nodeType":"135","messageId":"150","endLine":231,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":236,"column":29,"nodeType":"135","messageId":"150","endLine":236,"endColumn":31},{"ruleId":"151","severity":1,"message":"155","line":247,"column":29,"nodeType":"153","messageId":"154","endLine":247,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":275,"column":11,"nodeType":"158","endLine":280,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":281,"column":11,"nodeType":"158","endLine":286,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":287,"column":11,"nodeType":"158","endLine":292,"endColumn":13},{"ruleId":"123","severity":1,"message":"159","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":15},{"ruleId":"123","severity":1,"message":"160","line":37,"column":21,"nodeType":"125","messageId":"126","endLine":37,"endColumn":25},{"ruleId":"123","severity":1,"message":"161","line":6,"column":7,"nodeType":"125","messageId":"126","endLine":6,"endColumn":22},{"ruleId":"123","severity":1,"message":"160","line":31,"column":21,"nodeType":"125","messageId":"126","endLine":31,"endColumn":25},{"ruleId":"123","severity":1,"message":"162","line":1,"column":10,"nodeType":"163","messageId":"126","endLine":1,"endColumn":14},{"ruleId":"123","severity":1,"message":"142","line":5,"column":17,"nodeType":"125","messageId":"126","endLine":5,"endColumn":23},{"ruleId":"123","severity":1,"message":"143","line":7,"column":9,"nodeType":"125","messageId":"126","endLine":7,"endColumn":22},{"ruleId":"131","severity":1,"message":"164","line":25,"column":6,"nodeType":"165","endLine":25,"endColumn":8,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"149","line":39,"column":25,"nodeType":"135","messageId":"150","endLine":39,"endColumn":27},{"ruleId":"123","severity":1,"message":"160","line":90,"column":20,"nodeType":"125","messageId":"126","endLine":90,"endColumn":24},{"ruleId":"123","severity":1,"message":"142","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"156","severity":1,"message":"167","line":30,"column":17,"nodeType":"158","endLine":30,"endColumn":40},{"ruleId":"131","severity":1,"message":"134","line":39,"column":9,"nodeType":"135","endLine":46,"endColumn":10},{"ruleId":"168","severity":1,"message":"169","line":53,"column":15,"nodeType":"158","messageId":"170","endLine":53,"endColumn":56,"fix":"171"},{"ruleId":"148","severity":1,"message":"172","line":56,"column":35,"nodeType":"135","messageId":"173","endLine":56,"endColumn":37},{"ruleId":"151","severity":1,"message":"155","line":57,"column":53,"nodeType":"153","messageId":"154","endLine":57,"endColumn":55},{"ruleId":"123","severity":1,"message":"174","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"142","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"175","line":1,"column":34,"nodeType":"125","messageId":"126","endLine":1,"endColumn":42},{"ruleId":"123","severity":1,"message":"176","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"177","line":16,"column":7,"nodeType":"125","messageId":"126","endLine":16,"endColumn":23},{"ruleId":"123","severity":1,"message":"178","line":60,"column":23,"nodeType":"125","messageId":"126","endLine":60,"endColumn":29},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRestaurants'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["181"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Button' is defined but never used.","'styles' is defined but never used.","'border' is assigned a value but never used.","'ListView' is defined but never used.","'GridView' is defined but never used.","'MapView' is defined but never used.","'useRef' is defined but never used.","'createContext' is defined but never used.","'ReviewView' is defined but never used.","'ModeSet' is assigned a value but never used.","'Contents' is defined but never used.","'imgStyle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","'style' is defined but never used.","'Data' is assigned a value but never used.","'contentBoxStyle' is assigned a value but never used.","'kako' is defined but never used.","Program","React Hook useEffect has a missing dependency: 'contents'. Either include it or remove the dependency array.","ArrayExpression",["182"],"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"183","text":"184"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useEffect' is defined but never used.","'useState' is defined but never used.","'ReviewRead' is defined but never used.","'closeRiviewWrite' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},[1390,1390]," rel=\"noreferrer\"","Add dependencies array: []",{"range":"189","text":"190"},"Update the dependencies array to be: [contents]",{"range":"191","text":"192"},[596,596],", []",[598,600],"[contents]"]