[{"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\App.js":"3","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\MenuBar.js":"4","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchTotal.js":"5","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\ReviewTotal.js":"6","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchForm.js":"7","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\GridView.js":"8","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\ListView.js":"9","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\MapView.js":"10","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewRead.js":"11","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewView.js":"12","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\RiviewWrite.js":"13","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\contents.js":"14","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\review.js":"15"},{"size":651,"mtime":1639273804425,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1639259717018,"results":"18","hashOfConfig":"17"},{"size":1167,"mtime":1639411952294,"results":"19","hashOfConfig":"17"},{"size":1973,"mtime":1639312521542,"results":"20","hashOfConfig":"17"},{"size":418,"mtime":1639284691995,"results":"21","hashOfConfig":"17"},{"size":903,"mtime":1639421042758,"results":"22","hashOfConfig":"17"},{"size":7912,"mtime":1639422168572,"results":"23","hashOfConfig":"17"},{"size":1113,"mtime":1639398876095,"results":"24","hashOfConfig":"17"},{"size":1162,"mtime":1639398876097,"results":"25","hashOfConfig":"17"},{"size":5038,"mtime":1639422677130,"results":"26","hashOfConfig":"17"},{"size":1115,"mtime":1639398876088,"results":"27","hashOfConfig":"17"},{"size":2139,"mtime":1639421748054,"results":"28","hashOfConfig":"17"},{"size":8117,"mtime":1639421966708,"results":"29","hashOfConfig":"17"},{"size":895,"mtime":1639259717020,"results":"30","hashOfConfig":"17"},{"size":761,"mtime":1639259717021,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1cky060",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\index.js",["72"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport axios from \"axios\";\r\n// useEffect(()=> {\r\n//   axios.get('/api')\r\n//   .then(res => console.log(res))\r\n//   .catch()\r\n// })\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["73","74"],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\App.js",["75","76"],"\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; //부트스트랩 적용\r\n//import {Button} from \"react-bootstrap\";\r\nimport MenuBar from './component/MenuBar';\r\nimport axios from \"axios\";\r\nimport React, {useState,useEffect} from 'react';\r\nlet rule = [];\r\nfunction App() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n   useEffect(\r\n     async() => {\r\n       try{\r\n       const result = await axios.get(\"/restaurant\");\r\n       rule = result.data; //Array.from(JSON.stringify(result.data))\r\n      setRestaurants(rule);\r\n      }\r\n       catch(e) { console.log(e.message);}\r\n     }\r\n   )\r\n  // componentDidMount() {\r\n  //   this.callApi()\r\n  //     .then(res => this.setState(...this.state, {restaurants:res})) //this.setState({restaurants:res})\r\n  //     .catch(err => console.log(err));\r\n  // }\r\n\r\n  // callApi = async () => {\r\n  //   const response = await fetch('/api/restaurants');\r\n  //   const body = await response.json();\r\n  //   console.log(body);\r\n  //   return body;\r\n  // }\r\n  return (\r\n    \r\n    <div className=\"App Container\">\r\n      <MenuBar restaurants = {restaurants}/>\r\n    </div>\r\n    \r\n  ); }\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\MenuBar.js",["77","78","79"],"import {Button} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport SearchTotal from \"./SearchPage/SearchTotal\";\r\nimport ReviewTotal from \"./ReviewPage/ReviewTotal\";\r\nimport styles from '../css/MenuBar.css'; //안됨\r\nimport styled from 'styled-components'; //css할수있도록\r\n//const 이름 = styled.div ''; 형식 \r\n\r\nconst Logo = styled.div`\r\n@media screen and (max-width:550px ) {\r\n    display:none;\r\n}\r\n`; \r\n\r\nfunction MenuBar(props) {\r\n    const {restaurants} = props;\r\n    //console.log(restaurants);\r\n    const [view, setView] = useState(true);\r\n    const MenuContainer = {\r\n        margin:'30px 0',\r\n    }\r\n    const SelectBtn = {\r\n        backgroundColor: \"white\",\r\n        border:\"none\",\r\n        borderBottom: '2px solid red',\r\n        //borderRadius: '7px',\r\n        marginLeft: \"10px\",\r\n        width: \"70px\",\r\n        transition: \"1s\",\r\n        outline: \"none\"\r\n        \r\n    }\r\n\r\n    const nonSelectBtn = {\r\n        backgroundColor: \"white\",\r\n        //border: '1px solid black',\r\n        //borderRadius: '7px',\r\n        border:\"none\",\r\n        borderBottom: '2px solid white',\r\n        marginLeft: \"10px\",\r\n        width: \"70px\",\r\n        transition: \"0.5s\",\r\n        outline:\"none\"\r\n    }\r\n    const border = {\r\n        border: '1px solid black'\r\n    }\r\n    //component 구현하는거\r\n    return(\r\n        <>\r\n        <div className=\"row\" style={MenuContainer}>\r\n            <Logo><span >logo</span></Logo>\r\n            <div className=\"MenuBar\" >\r\n                <button style={view?SelectBtn:nonSelectBtn} \r\n                onClick={() => setView(true)} \r\n                value=\"search\">검색</button>\r\n\r\n                <button style={view?nonSelectBtn:SelectBtn} \r\n                onClick={() => setView(false)} \r\n                value=\"review\">후기</button>\r\n            </div>\r\n        </div>\r\n        {view ? <SearchTotal restaurants = {restaurants}/> : <ReviewTotal/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MenuBar;","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchTotal.js",["80","81","82"],"import React from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ListView from \"./View/ListView\";\r\nimport GridView from './View/GridView';\r\nimport MapView from \"./View/MapView\";\r\n\r\nfunction SearchTotal (props) {\r\n    const {restaurants} = props;\r\n    //console.log(restaurants);\r\n    return (\r\n        <>\r\n        <SearchForm restaurants={restaurants}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchTotal;","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\ReviewTotal.js",["83","84","85","86"],"import React, {useRef,useState,createContext} from \"react\";\r\nimport styled from 'styled-components';\r\nimport ReviewView from \"./View/ReviewView\";\r\nimport ReviewRead from \"./View/ReviewRead\";\r\nimport ReviewWrite from \"./View/RiviewWrite\";\r\nconst ModeSet = React.createContext(true);\r\n//리뷰 읽기/쓰기 모드 왔다 갔다 할 수 있는 버튼\r\nconst ReviewBtnStyle = styled.div`\r\nbutton{\r\n    background-color : white;\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 30px;\r\n}\r\n`;\r\nfunction ReviewTotal () {\r\n    const [mode, setMode] = useState(true);\r\n    const ReviewModeChange = () => {\r\n        mode?setMode(false):setMode(true)\r\n    }\r\n return(\r\n     <> \r\n        <ReviewBtnStyle>\r\n            <button onClick={ReviewModeChange}>+</button>\r\n        </ReviewBtnStyle>\r\n        {mode?<ReviewRead/>:<ReviewWrite/>}\r\n     </>\r\n );\r\n}\r\n\r\nexport default ReviewTotal;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\SearchForm.js",["87","88","89","90","91","92","93","94","95","96","97","98"],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\GridView.js",["99","100"],"import { style } from \"dom-helpers\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GridViewStyle = styled.div`\r\n  .sample {\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (min-width: 958px) {\r\n    .sample {\r\n      width: 80%;\r\n    }\r\n  }\r\n`;\r\nconst ContentBoxStyle = {\r\n  border: \"1px solid gray\",\r\n  width: \"250px\",\r\n  height: \"250px\",\r\n  margin: \"25px\",\r\n  float: \"none\",\r\n  //margin : '0 auto'\r\n};\r\n\r\nfunction ContentBox({ content }) {\r\n  return (\r\n    <div style={ContentBoxStyle}>\r\n      <p>{content.img}</p>\r\n      <p>{content.이름}</p>\r\n      <p>{content.주소}</p>\r\n      <p>{content.대표음식}</p>\r\n      <p>{content.간단한설명}</p>\r\n    </div>\r\n  );\r\n}\r\n//속성으로 받아오는 contents는 contents.js에 있음.\r\nfunction GridView(props) {\r\n  const { contents, Data } = props;\r\n  return (\r\n    <GridViewStyle>\r\n      <div className={\"row justify-content-center sample\"}>\r\n        {contents.map((content) => (\r\n          <ContentBox content={content} key={content.id} />\r\n        ))}\r\n      </div>\r\n    </GridViewStyle>\r\n  );\r\n}\r\nexport default GridView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\ListView.js",["101","102"],"//import { useSSRSafeId } from '@react-aria/ssr'; //.?\r\n//import userEvent from '@testing-library/user-event';\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst contentBoxStyle = styled.div`\r\n  .contentBox:hover {\r\n    background: gray;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst ContentBoxStyle = {\r\n  border: \"1px solid gray\",\r\n  height: \"30px\",\r\n  float: \"none\",\r\n  //margin : '0 auto'\r\n};\r\nfunction ContentBox({ content }) {\r\n  //console.log(content);\r\n  //\r\n  return (\r\n    <div style={ContentBoxStyle} className=\"col-sm-11 col-md-8 contentBox\">\r\n      <p>\r\n      {content.이름} {content.주소} {content.대표음식} {content.간단한설명}{content.태그}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nfunction ListView(props) {\r\n  //console.log(props);\r\n  const { contents, Data } = props;\r\n\r\n  return (\r\n    <div className={\"row justify-content-center\"}>\r\n      <div style={ContentBoxStyle} className=\"col-sm-11 col-md-8 contentBox\"><p>음식점이름 주소 메인메뉴</p></div>\r\n      {contents.map((content) => (\r\n        <ContentBox content={content} key={content.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\SearchPage\\View\\MapView.js",["103","104","105","106","107"],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewRead.js",[],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\ReviewView.js",["108","109","110","111","112","113"],"import React, {useEffect, useRef,useState} from \"react\";\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst ReviewViewStyle = styled.div`\r\n.sample {\r\n    margin: 0 auto;\r\n    p {\r\n        text-align:left;\r\n    }\r\n}\r\n@media screen and (min-width:958px ) {\r\n    .sample {\r\n        width: 80%;\r\n    }\r\n}\r\n`;\r\nconst ContentBoxStyle = {\r\n    border:'1px solid gray',\r\n    borderRadius: \"5%\",\r\n    width: \"400px\",\r\n    margin: \"20px\",\r\n    float: \"none\",\r\n\r\n}\r\n\r\nfunction ContentBox({review}) {\r\n    return (        \r\n        <div style={ContentBoxStyle}>\r\n      <br />\r\n      <p style={{ textAlign: `center` }}>\r\n        <img width=\"150px\" src={review.이미지} />\r\n      </p>\r\n      <h4>\" {review.제목} \"</h4>\r\n      <p style={{ textAlign: `right` }}>식당 : {review.식당이름} </p>\r\n      <p style={{ textAlign: `right`, fontSize: `13px`, marginTop: `-15px` }}>\r\n        작성자 : {review.작성자}{\" \"}\r\n      </p>\r\n\r\n      <br />\r\n      <p>\r\n        {\" \"}\r\n        <b>내용</b>\r\n      </p>\r\n      <p>&emsp;{review.내용}</p>\r\n    </div>\r\n        \r\n    );\r\n}\r\nlet role = [];\r\nfunction ReviewView(props) {\r\n    const [reviews, setReviews] = useState([]);\r\n    useEffect(\r\n        async() => {\r\n            try{\r\n                const review = await axios.get(\"/review\");\r\n                role = review.data;\r\n                console.log(role);\r\n                setReviews(role);\r\n            }catch(e){console.log(e.message);}\r\n        },[]\r\n    )\r\n    const {title} = props; //const {title} = props;\r\n    const naverUrl = 'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=';\r\n    return (\r\n        <>\r\n        <p>{title}</p>\r\n        <span><a href={naverUrl+title} target=\"_blank\">{title}</a></span> \r\n        <ReviewViewStyle>\r\n        <div className={\"row justify-content-center sample\"}>\r\n            {reviews.map((review) => {\r\n               if(review.식당이름.includes(title)||title==''){return <ContentBox review={review} key = {review.id}/>}\r\n            })}\r\n        </div>\r\n        </ReviewViewStyle>\r\n     </>\r\n    );\r\n}\r\n\r\nexport default ReviewView;\r\n","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\component\\ReviewPage\\View\\RiviewWrite.js",["114","115","116","117"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\n//stlye format\r\n// const ReviewBtnStyle = styled.div`\r\n// button{\r\n// background-color : white;\r\n// border-radius: 50%;\r\n// width: 50px;\r\n// height: 50px;\r\n// font-size: 30px;\r\n// }\r\n// `;\r\nconst RiviewForm = styled.div`\r\n  table {\r\n    width: 50%;\r\n  }\r\n  .thumbnail {\r\n    margin-left: 70px;\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  .thumbnail img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  textarea {\r\n    height: 200px;\r\n    resize: none;\r\n  }\r\n`;\r\nlet role = [];\r\n\r\nfunction ReviewWrite(props) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(async () => {\r\n    try {\r\n      const restaurantdata = await axios.get(\"/restaurant\");\r\n      role = restaurantdata.data;\r\n      setData(role);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  }, []);\r\n  const { title } = props;\r\n\r\n  const setThumbnail = (event) => {\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      const imageContainer = document.getElementById(\"img-container\");\r\n      var img = document.createElement(\"img\");\r\n      img.setAttribute(\"id\", \"reviewimg\");\r\n      img.setAttribute(\"src\", event.target.result);\r\n      imageContainer.innerHTML = \"\";\r\n      imageContainer.appendChild(img);\r\n    };\r\n\r\n    reader.readAsDataURL(event.target.files[0]);\r\n  };\r\n  const saveReview = () => {\r\n    const reviewtitle = document.getElementById(\"reviewTitle\");\r\n    const reviewaddress = document.getElementById(\"reviewAddress\");\r\n    const reviewcontent = document.getElementById(\"reviewContent\");\r\n    const reviewimg = document.getElementById(\"img-container\").firstChild;\r\n    console.log(reviewimg.src);\r\n    const send = async () => {\r\n      try {\r\n        const result = await axios.post(\"/review\", {\r\n          제목: reviewtitle.value,\r\n          식당이름: reviewaddress.value,\r\n          내용: reviewcontent.value,\r\n          이미지: `${reviewimg.src}`,\r\n        });\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n    send();\r\n  };\r\n  //<form method=\"post\" encType = \"\" action=\"\"> </form>\r\n  //<input type=\"submit\" className=\"btn-primary pull-right\" value=\"후기 저장\"/>\r\n  return (\r\n    <center>\r\n      <RiviewForm>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>음식점 후기 쓰기</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  id={\"reviewTitle\"}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"글 제목\"\r\n                  name=\"bbsTitle\"\r\n                  maxLength=\"50\"\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  id={\"reviewAddress\"}\r\n                  type=\"text\"\r\n                  list=\"data\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"주소\"\r\n                  name=\"map\"\r\n                  maxLength=\"50\"\r\n                />\r\n                <datalist id=\"data\">\r\n                  {data.map((content) => (\r\n                    <option value={content.이름} />\r\n                  ))}\r\n                </datalist>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                <textarea\r\n                  id={\"reviewContent\"}\r\n                  className=\"form-control\"\r\n                  placeholder=\"글 내용\"\r\n                  name=\"bbsContent\"\r\n                  maxLength=\"2048\"\r\n                ></textarea>\r\n                <div id={\"img-container\"} className=\"thumbnail\"></div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"fileName\"\r\n                  accept=\"image/*\"\r\n                  onChange={setThumbnail}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button onClick={saveReview}>후기 저장</button>\r\n      </RiviewForm>\r\n    </center>\r\n  );\r\n}\r\nexport default ReviewWrite;\r\n// import React, {useEffect, useRef,useState} from \"react\";\r\n// import styled from 'styled-components';\r\n// import axios from \"axios\";\r\n// import ReviewRead from \"./ReviewRead\";\r\n\r\n// //stlye format\r\n// // const ReviewBtnStyle = styled.div`\r\n// // button{\r\n// // background-color : white;\r\n// // border-radius: 50%;\r\n// // width: 50px;\r\n// // height: 50px;\r\n// // font-size: 30px;\r\n// // }\r\n// // `;\r\n// const closeRiviewWrite = false;\r\n// const RiviewForm = styled.div `\r\n// table {\r\n//     width:50%;\r\n// }\r\n// .thumbnail{\r\n//     margin-left: 70px;\r\n//     width: 100px;\r\n//     height: 100px;\r\n// }\r\n\r\n// .thumbnail img{\r\n//     width: 100%;\r\n//     height: 100%;\r\n// }\r\n\r\n// textarea{\r\n//     height: 200px;\r\n//     resize: none;\r\n// }\r\n// `;\r\n\r\n// function ReviewWrite() {\r\n//     const setThumbnail=(event)=> {\r\n//         var reader = new FileReader();\r\n//             reader.onload = function(event){\r\n//             const imageContainer = document.getElementById('img-container'); \r\n//             var img = document.createElement(\"img\");\r\n//             img.setAttribute(\"id\",\"reviewimg\");\r\n//             img.setAttribute(\"src\",event.target.result);\r\n//             imageContainer.innerHTML = '';\r\n//             imageContainer.appendChild(img);\r\n//         };\r\n    \r\n//     reader.readAsDataURL(event.target.files[0]);\r\n//     }\r\n//     const saveReview = () => {\r\n//         const reviewtitle = document.getElementById('reviewTitle');\r\n//         const reviewaddress = document.getElementById('reviewAddress');\r\n//         const reviewcontent = document.getElementById('reviewContent');\r\n//         const reviewimg = document.getElementById('img-container').firstChild;\r\n//         //console.log(reviewimg.src);\r\n//         const send = async() => {\r\n//             try{\r\n//                 const result = await axios.post('/review', {\r\n//                     제목:reviewtitle.value,\r\n//                     식당이름:reviewaddress.value,\r\n//                     내용:reviewcontent.value,\r\n//                     이미지:`${reviewimg.src}`,\r\n//                 });\r\n//             }catch(e) {\r\n//                 console.log(e.message);\r\n//             }\r\n//         }\r\n//         send();  \r\n//     }\r\n//     //<form method=\"post\" encType = \"\" action=\"\"> </form>\r\n//     //<input type=\"submit\" className=\"btn-primary pull-right\" value=\"후기 저장\"/>\r\n//     return(\r\n//         <center>\r\n//         <RiviewForm>\r\n//         <table className=\"table table-striped\">\r\n//             <thead>\r\n//                 <tr>\r\n//                     <th>음식점 후기 쓰기</th>\r\n//                 </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//                 <tr>\r\n//                     <td><input id={\"reviewTitle\"} type=\"text\" className=\"form-control\" placeholder=\"글 제목\" name=\"bbsTitle\" maxLength=\"50\"/></td>\r\n//                 </tr>\r\n                  \r\n//                 <tr>\r\n//                     <td><input id={\"reviewAddress\"} type=\"text\" className=\"form-control\" placeholder=\"주소\" name=\"map\" maxLength=\"50\"/></td>\r\n//                 </tr>\r\n            \r\n//                 <tr>\r\n//                     <td><textarea id={\"reviewContent\"} className=\"form-control\" placeholder=\"글 내용\" name=\"bbsContent\" maxLength=\"2048\"></textarea>\r\n//                         <div id ={\"img-container\"} className=\"thumbnail\" ></div>\r\n//                     </td>\r\n                    \r\n//                 </tr>\r\n//                 <tr>\r\n//                     <td><input type=\"file\" name=\"fileName\" accept=\"image/*\" onChange={setThumbnail}/></td>\r\n//                 </tr>\r\n//             </tbody>\r\n//             </table>\r\n//                 <button onClick={saveReview}>후기 저장</button>\r\n                \r\n    \r\n//     </RiviewForm>\r\n//     </center>\r\n//     );\r\n// }\r\n// export default ReviewWrite;","C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\contents.js",[],"C:\\Users\\user\\Desktop\\inyoung\\webprog\\project\\webproj222\\client\\src\\static_data\\review.js",[],{"ruleId":"118","severity":1,"message":"119","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":13},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":11,"column":4,"nodeType":"120","endLine":11,"endColumn":13,"suggestions":"128"},{"ruleId":"126","severity":1,"message":"129","line":12,"column":6,"nodeType":"130","endLine":19,"endColumn":7},{"ruleId":"118","severity":1,"message":"131","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":15},{"ruleId":"118","severity":1,"message":"132","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":14},{"ruleId":"118","severity":1,"message":"133","line":45,"column":11,"nodeType":"120","messageId":"121","endLine":45,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"135","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"136","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"118","severity":1,"message":"137","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":22},{"ruleId":"118","severity":1,"message":"138","line":1,"column":32,"nodeType":"120","messageId":"121","endLine":1,"endColumn":45},{"ruleId":"118","severity":1,"message":"139","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":18},{"ruleId":"118","severity":1,"message":"140","line":6,"column":7,"nodeType":"120","messageId":"121","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"141","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":13},{"ruleId":"118","severity":1,"message":"142","line":83,"column":7,"nodeType":"120","messageId":"121","endLine":83,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":182,"column":27,"nodeType":"130","messageId":"145","endLine":182,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":201,"column":33,"nodeType":"130","messageId":"145","endLine":201,"endColumn":35},{"ruleId":"146","severity":1,"message":"147","line":203,"column":24,"nodeType":"148","messageId":"149","endLine":203,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":213,"column":33,"nodeType":"130","messageId":"145","endLine":213,"endColumn":35},{"ruleId":"143","severity":1,"message":"144","line":218,"column":29,"nodeType":"130","messageId":"145","endLine":218,"endColumn":31},{"ruleId":"146","severity":1,"message":"150","line":229,"column":29,"nodeType":"148","messageId":"149","endLine":229,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":257,"column":11,"nodeType":"153","endLine":262,"endColumn":13},{"ruleId":"151","severity":1,"message":"152","line":263,"column":11,"nodeType":"153","endLine":268,"endColumn":13},{"ruleId":"151","severity":1,"message":"152","line":269,"column":11,"nodeType":"153","endLine":274,"endColumn":13},{"ruleId":"118","severity":1,"message":"154","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":15},{"ruleId":"118","severity":1,"message":"155","line":37,"column":21,"nodeType":"120","messageId":"121","endLine":37,"endColumn":25},{"ruleId":"118","severity":1,"message":"156","line":6,"column":7,"nodeType":"120","messageId":"121","endLine":6,"endColumn":22},{"ruleId":"118","severity":1,"message":"155","line":31,"column":21,"nodeType":"120","messageId":"121","endLine":31,"endColumn":25},{"ruleId":"118","severity":1,"message":"157","line":1,"column":10,"nodeType":"158","messageId":"121","endLine":1,"endColumn":14},{"ruleId":"118","severity":1,"message":"137","line":5,"column":17,"nodeType":"120","messageId":"121","endLine":5,"endColumn":23},{"ruleId":"118","severity":1,"message":"138","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":39,"column":25,"nodeType":"130","messageId":"145","endLine":39,"endColumn":27},{"ruleId":"118","severity":1,"message":"155","line":90,"column":20,"nodeType":"120","messageId":"121","endLine":90,"endColumn":24},{"ruleId":"118","severity":1,"message":"137","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":33},{"ruleId":"151","severity":1,"message":"159","line":32,"column":9,"nodeType":"153","endLine":32,"endColumn":47},{"ruleId":"126","severity":1,"message":"129","line":54,"column":9,"nodeType":"130","endLine":61,"endColumn":10},{"ruleId":"160","severity":1,"message":"161","line":68,"column":15,"nodeType":"153","messageId":"162","endLine":68,"endColumn":56,"fix":"163"},{"ruleId":"143","severity":1,"message":"164","line":71,"column":35,"nodeType":"130","messageId":"165","endLine":71,"endColumn":37},{"ruleId":"146","severity":1,"message":"150","line":72,"column":53,"nodeType":"148","messageId":"149","endLine":72,"endColumn":55},{"ruleId":"118","severity":1,"message":"137","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"129","line":39,"column":13,"nodeType":"130","endLine":47,"endColumn":4},{"ruleId":"118","severity":1,"message":"166","line":48,"column":11,"nodeType":"120","messageId":"121","endLine":48,"endColumn":16},{"ruleId":"118","severity":1,"message":"167","line":71,"column":15,"nodeType":"120","messageId":"121","endLine":71,"endColumn":21},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRestaurants'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["170"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Button' is defined but never used.","'styles' is defined but never used.","'border' is assigned a value but never used.","'ListView' is defined but never used.","'GridView' is defined but never used.","'MapView' is defined but never used.","'useRef' is defined but never used.","'createContext' is defined but never used.","'ReviewView' is defined but never used.","'ModeSet' is assigned a value but never used.","'Contents' is defined but never used.","'imgStyle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","'style' is defined but never used.","'Data' is assigned a value but never used.","'contentBoxStyle' is assigned a value but never used.","'kako' is defined but never used.","Program","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"171","text":"172"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'title' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},[1710,1710]," rel=\"noreferrer\"","Add dependencies array: []",{"range":"175","text":"176"},[596,596],", []"]