[{"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/index.js":"1","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/reportWebVitals.js":"2","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/App.js":"3","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/MenuBar.js":"4","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/SearchTotal.js":"5","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/ReviewPage/ReviewTotal.js":"6","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/SearchForm.js":"7","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/View/ListView.js":"8","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/View/MapView.js":"9","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/View/GridView.js":"10","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/static_data/review.js":"11","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/ReviewPage/View/ReviewView.js":"12","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/static_data/contents.js":"13"},{"size":500,"mtime":1639235358489,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1639235358489,"results":"16","hashOfConfig":"15"},{"size":308,"mtime":1639235358488,"results":"17","hashOfConfig":"15"},{"size":1664,"mtime":1639235358488,"results":"18","hashOfConfig":"15"},{"size":306,"mtime":1639235358489,"results":"19","hashOfConfig":"15"},{"size":1004,"mtime":1639235358488,"results":"20","hashOfConfig":"15"},{"size":6179,"mtime":1639258425248,"results":"21","hashOfConfig":"15"},{"size":936,"mtime":1639258437601,"results":"22","hashOfConfig":"15"},{"size":1796,"mtime":1639235847608,"results":"23","hashOfConfig":"15"},{"size":1012,"mtime":1639258455255,"results":"24","hashOfConfig":"15"},{"size":722,"mtime":1639235358490,"results":"25","hashOfConfig":"15"},{"size":1488,"mtime":1639235358488,"results":"26","hashOfConfig":"15"},{"size":850,"mtime":1639258799899,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"o48aq7",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/index.js",[],["62","63"],"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/reportWebVitals.js",[],"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/App.js",[],"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/MenuBar.js",["64","65","66"],"import {Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport SearchTotal from \"./SearchPage/SearchTotal\";\nimport ReviewTotal from \"./ReviewPage/ReviewTotal\";\nimport styles from '../css/MenuBar.css'; //안됨\nimport styled from 'styled-components'; //css할수있도록\n//const 이름 = styled.div ''; 형식 \n\nconst Logo = styled.div`\n@media screen and (max-width:550px ) {\n    display:none;\n}\n`; \n\nfunction MenuBar() {\n    const [view, setView] = useState(true);\n    const MenuContainer = {\n        margin:'30px 0',\n    }\n    const SelectBtn = {\n        backgroundColor: \"yellow\",\n        border: '1px solid black',\n        borderRadius: '7px',\n        marginLeft: \"10px\",\n        width: \"70px\",\n        transition: \"1s\",\n        \n    }\n\n    const nonSelectBtn = {\n        backgroundColor: \"white\",\n        border: '1px solid black',\n        borderRadius: '7px',\n        marginLeft: \"10px\",\n        width: \"70px\",\n        transition: \"0.5s\"\n    }\n    const border = {\n        border: '1px solid black'\n    }\n    //component 구현하는거\n    return(\n        <>\n        <div className=\"row\" style={MenuContainer}>\n            <Logo><span >logo</span></Logo>\n            <div className=\"MenuBar\" >\n                <button style={view?SelectBtn:nonSelectBtn} \n                onClick={() => setView(true)} \n                value=\"search\">검색</button>\n\n                <button style={view?nonSelectBtn:SelectBtn} \n                onClick={() => setView(false)} \n                value=\"review\">후기</button>\n            </div>\n        </div>\n        {view ? <SearchTotal/> : <ReviewTotal/>}\n        </>\n    );\n}\n\nexport default MenuBar;","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/SearchTotal.js",["67","68","69"],"import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ListView from \"./View/ListView\";\nimport GridView from './View/GridView';\nimport MapView from \"./View/MapView\";\n\nfunction SearchTotal () {\n    return (\n        <>\n        <SearchForm/>\n        </>\n    );\n}\n\nexport default SearchTotal;","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/ReviewPage/ReviewTotal.js",[],"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/SearchForm.js",["70","71","72","73","74","75","76","77","78","79"],"import React, { useState, useRef } from \"react\";\nimport ListView from \"./View/ListView\"; //그리드 뷰, 리스트 뷰, 맵 뷰 컴포넌트\nimport GridView from \"./View/GridView\";\nimport MapView from \"./View/MapView\";\nimport GridIcon from \"../img/grid.png\"; //그리드,리스트,맵 아이콘 경로\nimport ListIcon from \"../img/list.png\";\nimport MapIcon from \"../img/maps.png\";\nimport styled from \"styled-components\"; //css 쓸 수 있게\nimport Contents from \"../../static_data/contents\"; //맛집 data 정리 해놓은 파일\nimport axios from \"axios\"; //axios\nimport { useContext, createContext } from \"react\";\n\n//ViewBtn input 테두리 좀 더 다듬기 & 클릭하면 색깔 변하게\n//FilterBtn\n\n//filter\nconst situation = [\"혼밥\", \"모임\", \"특별한 날\", \"회식\"];\nconst preference = [\n  \"비건\",\n  \"육류\",\n  \"해산물\",\n  \"국물\",\n  \"매운 것\",\n  \"반주\",\n  \"디저트\",\n];\n\n//style\nconst FilterBox = styled.div`\n  .filterBox {\n    border: 1px solid black;\n    width: 50%;\n    position: fixed;\n    background: white;\n    top: 25%;\n    left: 25%;\n    z-index: 1;\n  }\n  .offbtn {\n    background: white;\n  }\n  .onbtn {\n    background: gray;\n  }\n  @media screen and (max-width: 958px) {\n    .filterBox {\n      top: 25%;\n      left: 5%;\n      width: 90%;\n      padding: 0 10%;\n    }\n  }\n`;\n\nconst FilterBtn = styled.div`\n  input {\n    border: 1px solid #eeeeee;\n    border-radius: 30px;\n    outline: none;\n  }\n  button {\n    width: 70px;\n  }\n  @media screen and (max-width: 958px) {\n    input {\n      width: 400px;\n    }\n  }\n`;\nconst ViewBtn = styled.div`\n  input {\n    width: 25px;\n    padding: 2px;\n    margin: 1px 0;\n    border: 1px black solid;\n    border-radius: 5px;\n  }\n`;\n\nconst imgStyle = {\n  width: \"25px\",\n};\nlet FilterList = {\n  \"btn-혼밥\": 0,\n  \"btn-모임\": 0,\n  \"btn-특별한 날\": 0,\n  \"btn-회식\": 0,\n  \"btn-비건\": 0,\n  \"btn-육류\": 0,\n  \"btn-해산물\": 0,\n  \"btn-국물\": 0,\n  \"btn-매운 것\": 0,\n  \"btn-반주\": 0,\n  \"btn-디저트\": 0,\n};\nfunction FilterBtns({ filter }) {\n  const Btntoggle = () => {\n    const btn = document.getElementById(`btn-${filter}`);\n    if (FilterList[btn.id] === 0) {\n      FilterList = { ...FilterList, [btn.id]: 1 };\n      console.log(FilterList);\n      btn.className = \"onbtn\";\n      //btn.style.background = \"gray\";\n    } else {\n      FilterList = { ...FilterList, [btn.id]: 0 };\n      console.log(FilterList);\n      btn.className = \"offbtn\";\n      //btn.style.background = \"white\";\n    }\n  };\n  return (\n    <button\n      onClick={Btntoggle}\n      id={`btn-${filter}`}\n      className={FilterList[`btn-${filter}`] === 1 ? \"onbtn\" : \"offbtn\"}\n    >\n      {filter}\n    </button>\n  );\n}\nfunction FilterBoxTool() {\n  return (\n    <FilterBox>\n      <div className=\"filterBox\">\n        <br />\n        <p>필터 설정</p>\n        <p>취향 필터</p>\n        {preference.map((filter) => (\n          <FilterBtns filter={filter} />\n        ))}\n        <br />\n        <br />\n        <p>상황 필터</p>\n        {situation.map((filter) => (\n          <FilterBtns filter={filter} />\n        ))}\n        <br />\n        <br />{\" \"}\n        <button id={\"closeBtn\"} onClick={closefilter}>\n          Check\n        </button>\n        <br />\n        <br />\n      </div>\n    </FilterBox>\n  );\n}\n\n//태그 창 열고 닫는 거\nconst closefilter = () => {\n  checkFilter = [];\n  const filterbox = document.getElementById(\"filterTotalBox\");\n  filterbox.style.display = \"none\";\n  for (const key in FilterList) {\n    if (FilterList[key] === 1) {\n      checkFilter.push(key.slice(4));\n    }\n  }\n  const filterlook = document.getElementById(\"filterLook\");\n  filterlook.innerText = checkFilter;\n};\nconst openfilter = () => {\n  const filterbox = document.getElementById(\"filterTotalBox\");\n  filterbox.style.display = \"block\";\n};\n\n//실행\nlet checkFilter = [];\n//const resultData = [];\n//const resultData = [];\nfunction SearchForm() {\n  const dataInput = useRef();\n  const [data, setData] = useState({\n    View: \"map\",\n    result: [],\n  });\n  let resultData = [];\n  const searchData = () => {\n    const dataInfo = dataInput.current;\n    resultData = [];\n    Contents.map((content) => {\n      if (\n        dataInfo.value == content.title ||\n        dataInfo.value == content.address\n      ) {\n        resultData.push(content);\n      } else if (dataInfo.value === \"\") {\n        resultData.push(content);\n      }\n    });\n    setData({ ...data, result: resultData });\n  };\n  return (\n    <>\n      <FilterBtn>\n        <div className={\"row justify-content-center\"}>\n          <input\n            ref={dataInput}\n            className={\"col-md-4 col-xs-5\"}\n            placeholder=\"음식점 이름/먹고 싶은 메뉴를 입력해 보세요\"\n          />\n          <button className={\"col-md-1 col-xs-2\"} onClick={searchData}>\n            검색{\" \"}\n          </button>\n          <button className={\"col-md-1 col-xs-2\"} onClick={openfilter}>\n            필터{\" \"}\n          </button>\n        </div>{\" \"}\n      </FilterBtn>\n      <div className={\"ViewBtnContainer\"}>\n        <ViewBtn>\n          <input\n            type={\"image\"}\n            src={MapIcon}\n            className={\"col-md-1 col-xs-1\"}\n            onClick={() => setData({ ...data, View: \"map\" })}\n          />\n          <input\n            type={\"image\"}\n            src={ListIcon}\n            className={\"col-md-1 col-xs-1\"}\n            onClick={() => setData({ ...data, View: \"list\" })}\n          />\n          <input\n            type={\"image\"}\n            src={GridIcon}\n            className={\"col-md-1 col-xs-1\"}\n            onClick={() => setData({ ...data, View: \"grid\" })}\n          />\n        </ViewBtn>\n      </div>\n      <div>\n        <span>고른 태그: </span>\n        <span id=\"filterLook\"></span>\n      </div>\n      {data.View === \"grid\" ? (\n        <GridView contents={data.result} Data={data.ResultWord} />\n      ) : data.View === \"list\" ? (\n        <ListView contents={data.result} Data={data.ResultWord} />\n      ) : (\n        <MapView contents={data.result} Data={data.ResultWord} />\n      )}\n\n      <div id=\"filterTotalBox\">\n        <center>\n          <FilterBoxTool />\n        </center>\n      </div>\n    </>\n  );\n}\nexport default SearchForm;\n","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/View/ListView.js",["80","81"],"//import { useSSRSafeId } from '@react-aria/ssr'; //.?\n//import userEvent from '@testing-library/user-event';\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst contentBoxStyle = styled.div`\n  .contentBox:hover {\n    background: gray;\n    margin: 0 auto;\n  }\n`;\nconst ContentBoxStyle = {\n  border: \"1px solid gray\",\n  height: \"30px\",\n  float: \"none\",\n  //margin : '0 auto'\n};\nfunction ContentBox({ content }) {\n  console.log(content);\n  return (\n    <div style={ContentBoxStyle} className=\"col-sm-11 col-md-8 contentBox\">\n      <p>\n        {content.id} {content.title} {content.introduce}\n      </p>\n    </div>\n  );\n}\nfunction ListView(props) {\n  console.log(props);\n  const { contents, Data } = props;\n\n  return (\n    <div className={\"row justify-content-center\"}>\n      {contents.map((content) => (\n        <ContentBox content={content} key={content.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default ListView;\n","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/View/MapView.js",["82","83"],"/*global kako */\n//https://developers.kakao.com/ api받아오기\n//https://cotist.tistory.com/3 참고\n//https://apis.map.kakao.com/web/sample/addMapCenterChangedEvent/ LatLng이랑 level 알아 올 수 있음\nimport React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst markerdata = [\n  {\n    title: \"클럽에반스\",\n    lat: 37.55033897015321,\n    lng: 126.9229336137093,\n  },\n  {\n    title: \"치차티클럽\",\n    lat: 37.57109940534566,\n    lng: 127.01135026952784,\n  },\n  {\n    title: \"TRVR Cafe\",\n    lat: 37.53838839800507,\n    lng: 126.99353635603627,\n  },\n  {\n    titel: \"용용선생\",\n    lat: 37.55939806463767,\n    lng: 127.03980732534552,\n  },\n];\n\nconst MapViewStyle = styled.div`\n  #map {\n    width: 65%;\n    height: 500px;\n    margin: 0 auto;\n  }\n  @media screen and (max-width: 958px) {\n    #map {\n      width: 95%;\n    }\n  }\n`;\n\nfunction Map() {\n  useEffect(() => {\n    mapscript();\n  }, []);\n\n  const mapscript = () => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new window.kakao.maps.LatLng(\n        37.56284927225243,\n        126.97138694483239\n      ),\n      level: 5,\n    };\n\n    //map\n    const map = new window.kakao.maps.Map(container, options);\n\n    markerdata.forEach((el) => {\n      // 마커를 생성합니다\n      new window.kakao.maps.Marker({\n        //마커가 표시 될 지도\n        map: map,\n        //마커가 표시 될 위치\n        position: new window.kakao.maps.LatLng(el.lat, el.lng),\n        //마커에 hover시 나타날 title\n        title: el.title,\n      });\n    });\n  };\n\n  return <div id=\"map\"></div>;\n}\n\nfunction MapView() {\n  return (\n    <center>\n      <MapViewStyle>\n        <Map />\n      </MapViewStyle>\n    </center>\n  );\n}\n\nexport default MapView;\n","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/SearchPage/View/GridView.js",["84"],"import { style } from \"dom-helpers\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst GridViewStyle = styled.div`\n  .sample {\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 958px) {\n    .sample {\n      width: 80%;\n    }\n  }\n`;\nconst ContentBoxStyle = {\n  border: \"1px solid gray\",\n  width: \"250px\",\n  height: \"250px\",\n  margin: \"25px\",\n  float: \"none\",\n  //margin : '0 auto'\n};\n\nfunction ContentBox({ content }) {\n  return (\n    <div style={ContentBoxStyle}>\n      <p>{content.id}</p>\n      <p>{content.img}</p>\n      <p>{content.title}</p>\n      <p>{content.introduce}</p>\n    </div>\n  );\n}\n//속성으로 받아오는 contents는 contents.js에 있음.\nfunction GridView(props) {\n  const { contents } = props;\n  return (\n    <GridViewStyle>\n      <div className={\"row justify-content-center sample\"}>\n        {contents.map((content) => (\n          <ContentBox content={content} key={content.id} />\n        ))}\n      </div>\n    </GridViewStyle>\n  );\n}\nexport default GridView;\n","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/static_data/review.js",[],"/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/component/ReviewPage/View/ReviewView.js",["85","86","87","88"],"import React from \"react\";\nimport styled from 'styled-components';\n\nconst ReviewBtnStyle = styled.div`\nbutton{\nbackground-color : white;\nborder-radius: 50%;\nwidth: 50px;\nheight: 50px;\nfont-size: 30px;\n}\n`;\n\nconst ReviewViewStyle = styled.div`\n.sample {\n    margin: 0 auto;\n}\n@media screen and (min-width:958px ) {\n    .sample {\n        width: 80%;\n    }\n}\n`;\nconst ContentBoxStyle = {\n    border:'1px solid gray',\n    width:'250px',\n    height:'250px',\n    margin: '25px',\n    float:'none',\n    //margin : '0 auto'\n}\n\nfunction ContentBox({review}) {\n    return (        \n        <div style={ContentBoxStyle}>\n            <p>{review.id}</p>\n            <p>{review.img}</p>\n            <p>{review.title}</p>\n            <p>{review.introduce}</p>\n        </div>\n        \n    );\n}\n\nfunction ReviewView(props) {\n    const {reviews, title} = props;\n    const naverUrl = 'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=';\n    return (\n        <>\n        <ReviewBtnStyle>\n        <button>+</button>\n        </ReviewBtnStyle>\n        <p>{title}</p>\n        <span><a href={naverUrl+title} target=\"_blank\">{title}</a></span> \n        <ReviewViewStyle>\n        <div className={\"row justify-content-center sample\"}>\n            {reviews.map((review) => {\n               if(title==review.title||title==''){return <ContentBox review={review} key = {review.id}/>}\n            })}\n        </div>\n        </ReviewViewStyle>\n     </>\n    );\n}\n\nexport default ReviewView;","/Users/sohyeonsu/Documents/GitHub/webproj222/client/src/static_data/contents.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":9,"nodeType":"95","messageId":"96","endLine":1,"endColumn":15},{"ruleId":"93","severity":1,"message":"97","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":38,"column":11,"nodeType":"95","messageId":"96","endLine":38,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":16},{"ruleId":"93","severity":1,"message":"100","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"101","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":15},{"ruleId":"93","severity":1,"message":"102","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":20},{"ruleId":"93","severity":1,"message":"104","line":11,"column":22,"nodeType":"95","messageId":"96","endLine":11,"endColumn":35},{"ruleId":"93","severity":1,"message":"105","line":80,"column":7,"nodeType":"95","messageId":"96","endLine":80,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":181,"column":28,"nodeType":"108","messageId":"109","endLine":181,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":183,"column":24,"nodeType":"112","messageId":"113","endLine":183,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":184,"column":24,"nodeType":"112","messageId":"113","endLine":184,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":212,"column":11,"nodeType":"116","endLine":217,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":218,"column":11,"nodeType":"116","endLine":223,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":224,"column":11,"nodeType":"116","endLine":229,"endColumn":13},{"ruleId":"93","severity":1,"message":"117","line":6,"column":7,"nodeType":"95","messageId":"96","endLine":6,"endColumn":22},{"ruleId":"93","severity":1,"message":"118","line":30,"column":21,"nodeType":"95","messageId":"96","endLine":30,"endColumn":25},{"ruleId":"93","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"96","endLine":1,"endColumn":14},{"ruleId":"93","severity":1,"message":"121","line":5,"column":17,"nodeType":"95","messageId":"96","endLine":5,"endColumn":23},{"ruleId":"93","severity":1,"message":"122","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":54,"column":15,"nodeType":"116","messageId":"125","endLine":54,"endColumn":56,"fix":"126"},{"ruleId":"106","severity":1,"message":"127","line":57,"column":35,"nodeType":"108","messageId":"128","endLine":57,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":58,"column":24,"nodeType":"112","messageId":"113","endLine":58,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":58,"column":45,"nodeType":"112","messageId":"113","endLine":58,"endColumn":47},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'border' is assigned a value but never used.","'ListView' is defined but never used.","'GridView' is defined but never used.","'MapView' is defined but never used.","'axios' is defined but never used.","'useContext' is defined but never used.","'createContext' is defined but never used.","'imgStyle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","'contentBoxStyle' is assigned a value but never used.","'Data' is assigned a value but never used.","'kako' is defined but never used.","Program","'useRef' is defined but never used.","'style' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"131","text":"132"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",[1131,1131]," rel=\"noreferrer\""]