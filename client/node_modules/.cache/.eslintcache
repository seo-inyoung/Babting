[{"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/index.js":"1","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/reportWebVitals.js":"2","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/App.js":"3","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/MenuBar.js":"4","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/SearchTotal.js":"5","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/ReviewTotal.js":"6","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/SearchForm.js":"7","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/View/ListView.js":"8","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/View/MapView.js":"9","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/View/GridView.js":"10","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/View/ReviewRead.js":"11","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/View/ReviewView.js":"12","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/View/RiviewWrite.js":"13","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/static_data/contents.js":"14","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/static_data/review.js":"15"},{"size":627,"mtime":1639285118875,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1639272522917,"results":"18","hashOfConfig":"17"},{"size":1126,"mtime":1639422071360,"results":"19","hashOfConfig":"17"},{"size":2064,"mtime":1639482765946,"results":"20","hashOfConfig":"17"},{"size":402,"mtime":1639285118875,"results":"21","hashOfConfig":"17"},{"size":990,"mtime":1639475725469,"results":"22","hashOfConfig":"17"},{"size":9134,"mtime":1639487293829,"results":"23","hashOfConfig":"17"},{"size":2454,"mtime":1639485485935,"results":"24","hashOfConfig":"17"},{"size":2858,"mtime":1639486323377,"results":"25","hashOfConfig":"17"},{"size":2190,"mtime":1639485574468,"results":"26","hashOfConfig":"17"},{"size":1421,"mtime":1639476001141,"results":"27","hashOfConfig":"17"},{"size":2238,"mtime":1639477895781,"results":"28","hashOfConfig":"17"},{"size":4632,"mtime":1639480070251,"results":"29","hashOfConfig":"17"},{"size":850,"mtime":1639272522917,"results":"30","hashOfConfig":"17"},{"size":722,"mtime":1639272522917,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"zn546h",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/index.js",["73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport axios from \"axios\";\n// useEffect(()=> {\n//   axios.get('/api')\n//   .then(res => console.log(res))\n//   .catch()\n// })\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["74","75"],"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/reportWebVitals.js",[],"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/App.js",["76","77"],"\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //부트스트랩 적용\n//import {Button} from \"react-bootstrap\";\nimport MenuBar from './component/MenuBar';\nimport axios from \"axios\";\nimport React, {useState,useEffect} from 'react';\nlet rule = [];\nfunction App() {\n  const [restaurants, setRestaurants] = useState([]);\n   useEffect(\n     async() => {\n       try{\n       const result = await axios.get(\"/restaurant\");\n       rule = result.data; //Array.from(JSON.stringify(result.data))\n      setRestaurants(rule);\n      }\n       catch(e) { console.log(e.message);}\n     }\n   )\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState(...this.state, {restaurants:res})) //this.setState({restaurants:res})\n  //     .catch(err => console.log(err));\n  // }\n\n  // callApi = async () => {\n  //   const response = await fetch('/api/restaurants');\n  //   const body = await response.json();\n  //   console.log(body);\n  //   return body;\n  // }\n  return (\n    \n    <div className=\"App Container\">\n      <MenuBar restaurants = {restaurants}/>\n    </div>\n    \n  ); }\n\nexport default App;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/MenuBar.js",["78","79","80","81"],"import { Button } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport SearchTotal from \"./SearchPage/SearchTotal\";\nimport ReviewTotal from \"./ReviewPage/ReviewTotal\";\nimport styles from \"../css/MenuBar.css\"; //안됨\nimport styled from \"styled-components\"; //css할수있도록\nimport imgfile from \"./img/logo2.png\";\n\n//const 이름 = styled.div ''; 형식\n\nconst Logo = styled.div`\n  @media screen and (max-width: 550px) {\n    display: none;\n  }\n`;\n\nfunction MenuBar(props) {\n  const { restaurants } = props;\n  //console.log(restaurants);\n  const [view, setView] = useState(true);\n  const MenuContainer = {\n    margin: \"30px 0\",\n  };\n  const SelectBtn = {\n    backgroundColor: \"white\",\n    border: \"none\",\n    borderBottom: \"3px solid red\",\n    //borderRadius: '7px',\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    width: \"70px\",\n    transition: \"1s\",\n    outline: \"none\",\n    fontSize: `20px`,\n  };\n\n  const nonSelectBtn = {\n    backgroundColor: \"white\",\n    //border: '1px solid black',\n    //borderRadius: '7px',\n    border: \"none\",\n    borderBottom: \"3px solid white\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    width: \"70px\",\n    transition: \"0.5s\",\n    outline: \"none\",\n    fontSize: `20px`,\n  };\n  const border = {\n    border: \"1px solid black\",\n  };\n  //component 구현하는거\n  return (\n    <>\n      <div className=\"row\" style={MenuContainer}>\n        <Logo>\n          <img src={imgfile} style={{ height: `50px` }}></img>\n        </Logo>\n        <div className=\"MenuBar\">\n          <br />\n\n          <button\n            style={view ? SelectBtn : nonSelectBtn}\n            onClick={() => setView(true)}\n            value=\"search\"\n          >\n            검색\n          </button>\n\n          <button\n            style={view ? nonSelectBtn : SelectBtn}\n            onClick={() => setView(false)}\n            value=\"review\"\n          >\n            후기\n          </button>\n        </div>\n      </div>\n      {view ? <SearchTotal restaurants={restaurants} /> : <ReviewTotal />}\n    </>\n  );\n}\n\nexport default MenuBar;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/SearchTotal.js",["82","83","84"],"import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ListView from \"./View/ListView\";\nimport GridView from './View/GridView';\nimport MapView from \"./View/MapView\";\n\nfunction SearchTotal (props) {\n    const {restaurants} = props;\n    //console.log(restaurants);\n    return (\n        <>\n        <SearchForm restaurants={restaurants}/>\n        </>\n    );\n}\n\nexport default SearchTotal;","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/ReviewTotal.js",["85","86","87","88"],"import React, { useRef, useState, createContext } from \"react\";\nimport styled from \"styled-components\";\nimport ReviewView from \"./View/ReviewView\";\nimport ReviewRead from \"./View/ReviewRead\";\nimport ReviewWrite from \"./View/RiviewWrite\";\nconst ModeSet = React.createContext(true);\n//리뷰 읽기/쓰기 모드 왔다 갔다 할 수 있는 버튼\nconst ReviewBtnStyle = styled.div`\n  button {\n    background-color: white;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    font-size: 30px;\n  }\n`;\nfunction ReviewTotal() {\n  const [mode, setMode] = useState(true);\n  const ReviewModeChange = () => {\n    mode ? setMode(false) : setMode(true);\n  };\n  return (\n    <>\n      <ReviewBtnStyle>\n        <button\n          style={{ border: `none`, backgroundColor: `#F4BF5A`, color: `white` }}\n          onClick={ReviewModeChange}\n        >\n          +\n        </button>\n      </ReviewBtnStyle>\n      {mode ? <ReviewRead /> : <ReviewWrite />}\n    </>\n  );\n}\n\nexport default ReviewTotal;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/SearchForm.js",["89","90","91","92","93","94","95","96","97","98","99","100"],"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/View/ListView.js",["101","102","103"],"//import { useSSRSafeId } from '@react-aria/ssr'; //.?\n//import userEvent from '@testing-library/user-event';\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst contentBoxStyle = styled.div`\n  .contentBox:hover {\n    background: gray;\n    margin: 0 auto;\n  }\n`;\nconst ContentBoxStyle = {\n  display: \"flex\",\n  border: \"1px solid gray\",\n  height: \"auto\",\n  float: \"none\",\n  padding: \"3px\",\n  justifyContent: \"space-between\",\n  //margin : '0 auto'\n};\nconst categoryStyle = {\n  display: \"flex\",\n  border: \"1px solid gray\",\n  height: \"auto\",\n  float: \"none\",\n  padding: \"3px\",\n  background: \"#f4bf5a\",\n  justifyContent: \"space-between\",\n};\n\nconst naverUrl =\n  \"https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=\";\n\nfunction ContentBox({ content }) {\n  //console.log(content);\n  //\n  return (\n    <div style={ContentBoxStyle} className=\"col-sm-11 col-md-8 contentBox\">\n      <table\n        style={{ textAlign: `left`, height: `auto`, wordBreak: `break-all` }}\n      >\n        <tr>\n          <td width=\"190px\">\n            <a\n              href={naverUrl + `${content.이름}`}\n              target=\"_blank\"\n              style={{ color: `black`, textDecoration: `none` }}\n            >\n              <b>{content.이름}</b>\n            </a>\n          </td>\n          <td width=\"100px\">{content.주소}</td>\n          <td width=\"100px\">{content.대표음식}</td>\n          <td width=\"500px\">{content.간단한설명}</td>\n          <td width=\"150px\">{content.태그}</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\nfunction ListView(props) {\n  //console.log(props);\n  const { contents, Data } = props;\n\n  return (\n    <div className={\"row justify-content-center\"}>\n      <div style={categoryStyle} className=\"col-sm-11 col-md-8 contentBox\">\n        <tr style={{ textAlign: `left` }}>\n          <td className=\"title\" width=\"190px\">\n            <b>식당 이름</b>\n          </td>\n          <td className=\"title\" width=\"100px\">\n            <b>위치</b>\n          </td>\n          <td className=\"title\" width=\"100px\">\n            <b>대표 메뉴</b>\n          </td>\n          <td className=\"title\" width=\"500px\">\n            <b>설명</b>\n          </td>\n          <td width=\"150px\">\n            <b>태그</b>\n          </td>\n        </tr>\n      </div>\n      {contents.map((content) => (\n        <ContentBox content={content} key={content.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default ListView;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/View/MapView.js",["104","105","106","107","108"],"/*global kako */\n//https://developers.kakao.com/ api받아오기\n//https://cotist.tistory.com/3 참고\n//https://apis.map.kakao.com/web/sample/addMapCenterChangedEvent/ LatLng이랑 level 알아 올 수 있음\nimport React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { createContext } from \"react\";\n\nconst MapViewStyle = styled.div`\n  #map {\n    width: 65%;\n    height: 450px;\n    margin: 0 auto;\n  }\n  @media screen and (max-width: 958px) {\n    #map {\n      width: 95%;\n    }\n  }\n`;\n\nfunction Map({ contents }) {\n  useEffect(() => {\n    mapscript(contents);\n  }, [contents]);\n  const mapscript = (contents) => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new window.kakao.maps.LatLng(\n        37.56284927225243,\n        126.97138694483239\n      ),\n      level: 8,\n    };\n    console.log(\"함수실행\");\n    //map\n    const map = new window.kakao.maps.Map(container, options);\n\n    contents.map((item) => {\n      // 마커를 생성합니다\n      //console.log(item)\n      const marker = new window.kakao.maps.Marker({\n        //마커가 표시 될 지도\n        map: map,\n        //마커가 표시 될 위치\n        position: new window.kakao.maps.LatLng(item.위도, item.경도),\n      });\n      // allContent 변수를 선언해서 markerdata의 title,tag를 받아옴 맞나? ㅋㅋㅋㅋㅋ\n      var allContent = `<div style=\"text-align:left\" overflow:auto;>이름 | ${item.이름}<br/>주소 | ${item.주소}<br/>대표음식 | ${item.대표음식}</div>`;\n      // infowindow 선언 content:allContent로 다 띄울 수 있을 듯?\n      var infowindow = new window.kakao.maps.InfoWindow({\n        content: allContent,\n      });\n\n      //마커에 mouseover, mouseout 이벤트를 등록함\n      // 이벤트리스너로 클로저를 만들어줌\n      // 안만들어주면 마지막 마커에만 이벤트 등록됨 ㅇㅇ\n      window.kakao.maps.event.addListener(\n        marker,\n        \"mouseover\",\n        makeOverListener(map, marker, infowindow)\n      );\n      window.kakao.maps.event.addListener(\n        marker,\n        \"mouseout\",\n        makeOutListener(infowindow)\n      );\n    });\n    // 인포윈도우를 표시하는 클로저를 만드는 함수\n    function makeOverListener(map, marker, infowindow) {\n      return function () {\n        infowindow.open(map, marker);\n      };\n    }\n\n    // 인포윈도우를 닫는 클로저를 만드는 함수\n    function makeOutListener(infowindow) {\n      return function () {\n        infowindow.close();\n      };\n    }\n  };\n\n  return <div id=\"map\"></div>;\n}\n//아니 왜 안됨? 진짜..\nfunction MapView(props) {\n  const { contents, Data } = props;\n  return (\n    <center>\n      <MapViewStyle>\n        <Map contents={contents} />\n      </MapViewStyle>\n    </center>\n  );\n}\n\nexport default MapView;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/SearchPage/View/GridView.js",["109","110","111"],"import { style } from \"dom-helpers\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst GridViewStyle = styled.div`\n  .sample {\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 958px) {\n    .sample {\n      width: 80%;\n    }\n  }\n`;\nconst ContentBoxStyle = {\n  border: \"2px solid #62AAE2\",\n  borderRadius: \"5%\",\n  width: \"250px\",\n  height: \"250px\",\n  margin: \"25px\",\n  float: \"none\",\n  //margin : '0 auto'\n};\n\nconst naverUrl =\n  \"https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=\";\n\nfunction ContentBox({ content }) {\n  return (\n    <div style={ContentBoxStyle}>\n      <a\n        href={naverUrl + `${content.이름}`}\n        target=\"_blank\"\n        style={{ color: `black`, textDecoration: `none` }}\n      >\n        <p>{content.img}</p>\n        <h5>\n          <b>{content.이름}</b>\n        </h5>\n        <hr style={{ backgroundColor: `#62AAE2`, height: `4px` }} />\n        <p\n          style={{\n            textAlign: `left`,\n            fontSize: `13px`,\n            marginLeft: `110px`,\n            marginTop: `-10px`,\n          }}\n        >\n          &emsp;&emsp;위치 | {content.주소}\n        </p>\n        <p\n          style={{\n            textAlign: `left`,\n            fontSize: `13px`,\n            marginTop: `-15px`,\n            marginLeft: `110px`,\n          }}\n        >\n          &nbsp;대표메뉴 | {content.대표음식}\n        </p>\n        <p\n          style={{ textAlign: `center  `, fontSize: `14px`, marginLeft: `px` }}\n        >\n          \"{content.간단한설명}\"\n        </p>\n        {content.태그 != null ? (\n          <p style={{ textAlign: `right`, fontSize: `14px` }}>\n            #{content.태그.replace(\",\", \"#\")}\n          </p>\n        ) : (\n          \"\"\n        )}\n      </a>\n    </div>\n  );\n}\n//속성으로 받아오는 contents는 contents.js에 있음.\nfunction GridView(props) {\n  const { contents, Data } = props;\n  return (\n    <GridViewStyle>\n      <div className={\"row justify-content-center sample\"}>\n        {contents.map((content) => (\n          <ContentBox content={content} key={content.id} />\n        ))}\n      </div>\n    </GridViewStyle>\n  );\n}\nexport default GridView;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/View/ReviewRead.js",[],"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/View/ReviewView.js",["112","113","114","115","116","117","118"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst ReviewViewStyle = styled.div`\n  .sample {\n    margin: 0 auto;\n    p {\n      text-align: left;\n    }\n  }\n  @media screen and (min-width: 958px) {\n    .sample {\n      width: 80%;\n    }\n  }\n`;\n// const ContentBoxStyle = styled.div`\n//     border:1px solid gray;\n//     width:250px;\n//     height:250px;\n//     margin:25px;\n//     float:'none;\n// .contentbox {\n// }\n// `;\nconst ContentBoxStyle = {\n  border: \"1px solid gray\",\n  borderRadius: \"5%\",\n  width: \"500px\",\n  height: \"500px\",\n  margin: \"20px\",\n  float: \"none\",\n\n  //margin : '0 auto'\n};\n\nfunction ContentBox({ review }) {\n  return (\n    <div style={ContentBoxStyle}>\n      <br />\n      <p style={{ textAlign: `center` }}>\n        <img height=\"150px\" src={review.이미지} />\n      </p>\n      <h4>\" {review.제목} \"</h4>\n      <p style={{ textAlign: `right` }}>식당 : {review.식당이름} </p>\n      <p style={{ textAlign: `right`, fontSize: `13px`, marginTop: `-15px` }}>\n        작성자 : {review.작성자}{\" \"}\n      </p>\n\n      <br />\n      <p>\n        {\" \"}\n        <b>내용</b>\n      </p>\n      <p>&emsp;{review.내용}</p>\n    </div>\n  );\n}\nlet role = [];\nfunction ReviewView(props) {\n  const [reviews, setReviews] = useState([]);\n  useEffect(async () => {\n    try {\n      const review = await axios.get(\"/review\");\n      role = review.data;\n      console.log(role);\n      setReviews(role);\n    } catch (e) {\n      console.log(e.message);\n    }\n  });\n  const { title } = props; //const {title} = props;\n  const naverUrl =\n    \"https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=\";\n  return (\n    <>\n      <p>{title}</p>\n      <span>\n        <a href={naverUrl + title} target=\"_blank\">\n          {title}\n        </a>\n      </span>\n      <ReviewViewStyle>\n        <div className={\"row justify-content-left sample\"}>\n          {reviews.map((review) => {\n            if (review.식당이름.includes(title) || title == \"\") {\n              return <ContentBox review={review} key={review.id} />;\n            }\n          })}\n        </div>\n      </ReviewViewStyle>\n    </>\n  );\n}\n\nexport default ReviewView;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/component/ReviewPage/View/RiviewWrite.js",["119","120","121","122"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n//stlye format\n// const ReviewBtnStyle = styled.div`\n// button{\n// background-color : white;\n// border-radius: 50%;\n// width: 50px;\n// height: 50px;\n// font-size: 30px;\n// }\n// `;\nconst RiviewForm = styled.div`\n  table {\n    width: 50%;\n  }\n  .thumbnail {\n    margin-left: 70px;\n    width: 100px;\n    height: 100px;\n  }\n\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n  }\n\n  textarea {\n    height: 200px;\n    resize: none;\n  }\n`;\nlet role = [];\n\nfunction ReviewWrite(props) {\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    try {\n      const restaurantdata = await axios.get(\"/restaurant\");\n      role = restaurantdata.data;\n      setData(role);\n    } catch (e) {\n      console.log(e.message);\n    }\n  }, []);\n  const { title } = props;\n\n  const setThumbnail = (event) => {\n    let reader = new FileReader();\n    reader.onload = function (event) {\n      const imageContainer = document.getElementById(\"img-container\");\n      let img = document.createElement(\"img\");\n      img.setAttribute(\"id\", \"reviewimg\");\n      img.setAttribute(\"src\", event.target.result);\n      imageContainer.innerHTML = \"\";\n      imageContainer.appendChild(img);\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  };\n  const saveReview = () => {\n    const reviewtitle = document.getElementById(\"reviewTitle\");\n    const reviewaddress = document.getElementById(\"reviewAddress\");\n    const reviewcontent = document.getElementById(\"reviewContent\");\n    const reviewimg = document.getElementById(\"img-container\").firstChild;\n    const reviewwriter = document.getElementById(\"reviewWriter\");\n    console.log(reviewwriter.value);\n    console.log(reviewtitle.value);\n\n    console.log(reviewimg.src);\n    const send = async () => {\n      try {\n        const result = await axios.post(\"/review\", {\n          제목: reviewtitle.value,\n          식당이름: reviewaddress.value,\n          내용: reviewcontent.value,\n          이미지: `${reviewimg.src}`,\n          작성자: reviewwriter.value,\n        });\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    send();\n  };\n  //<form method=\"post\" encType = \"\" action=\"\"> </form>\n  //<input type=\"submit\" className=\"btn-primary pull-right\" value=\"후기 저장\"/>\n  return (\n    <center>\n      <RiviewForm>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>음식점 후기 쓰기</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  id={\"reviewTitle\"}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"글 제목\"\n                  name=\"bbsTitle\"\n                  maxLength=\"50\"\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <input\n                  id={\"reviewAddress\"}\n                  type=\"text\"\n                  list=\"data\"\n                  className=\"form-control\"\n                  placeholder=\"주소\"\n                  name=\"map\"\n                  maxLength=\"50\"\n                />\n                <datalist id=\"data\">\n                  {data.map((content) => (\n                    <option value={content.이름} />\n                  ))}\n                </datalist>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <input\n                  id={\"reviewWriter\"}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"작성자\"\n                  name=\"bbsWriter\"\n                  maxLength=\"50\"\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <textarea\n                  id={\"reviewContent\"}\n                  className=\"form-control\"\n                  placeholder=\"글 내용\"\n                  name=\"bbsContent\"\n                  maxLength=\"2048\"\n                ></textarea>\n                <div id={\"img-container\"} className=\"thumbnail\"></div>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  type=\"file\"\n                  name=\"fileName\"\n                  accept=\"image/*\"\n                  onChange={setThumbnail}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button onClick={saveReview}>후기 저장</button>\n      </RiviewForm>\n    </center>\n  );\n}\nexport default ReviewWrite;\n","/Users/sohyeonsu/Documents/GitHub/Babting/client/src/static_data/contents.js",[],"/Users/sohyeonsu/Documents/GitHub/Babting/client/src/static_data/review.js",[],{"ruleId":"123","severity":1,"message":"124","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":13},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":11,"column":4,"nodeType":"125","endLine":11,"endColumn":13,"suggestions":"133"},{"ruleId":"131","severity":1,"message":"134","line":12,"column":6,"nodeType":"135","endLine":19,"endColumn":7},{"ruleId":"123","severity":1,"message":"136","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":16},{"ruleId":"123","severity":1,"message":"137","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":14},{"ruleId":"123","severity":1,"message":"138","line":50,"column":9,"nodeType":"125","messageId":"126","endLine":50,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":58,"column":11,"nodeType":"141","endLine":58,"endColumn":57},{"ruleId":"123","severity":1,"message":"142","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"143","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"144","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":15},{"ruleId":"123","severity":1,"message":"145","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":23},{"ruleId":"123","severity":1,"message":"146","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"147","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":18},{"ruleId":"123","severity":1,"message":"148","line":6,"column":7,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"123","severity":1,"message":"149","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":13},{"ruleId":"123","severity":1,"message":"150","line":100,"column":7,"nodeType":"125","messageId":"126","endLine":100,"endColumn":15},{"ruleId":"151","severity":1,"message":"152","line":217,"column":27,"nodeType":"135","messageId":"153","endLine":217,"endColumn":29},{"ruleId":"151","severity":1,"message":"152","line":236,"column":33,"nodeType":"135","messageId":"153","endLine":236,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":238,"column":26,"nodeType":"156","messageId":"157","endLine":238,"endColumn":28},{"ruleId":"151","severity":1,"message":"152","line":248,"column":33,"nodeType":"135","messageId":"153","endLine":248,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":253,"column":29,"nodeType":"135","messageId":"153","endLine":253,"endColumn":31},{"ruleId":"154","severity":1,"message":"158","line":264,"column":33,"nodeType":"156","messageId":"157","endLine":264,"endColumn":35},{"ruleId":"139","severity":1,"message":"159","line":318,"column":11,"nodeType":"141","endLine":324,"endColumn":13},{"ruleId":"139","severity":1,"message":"159","line":325,"column":11,"nodeType":"141","endLine":331,"endColumn":13},{"ruleId":"139","severity":1,"message":"159","line":332,"column":11,"nodeType":"141","endLine":338,"endColumn":13},{"ruleId":"123","severity":1,"message":"160","line":6,"column":7,"nodeType":"125","messageId":"126","endLine":6,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":44,"column":13,"nodeType":"141","messageId":"163","endLine":48,"endColumn":14,"fix":"164"},{"ruleId":"123","severity":1,"message":"165","line":63,"column":21,"nodeType":"125","messageId":"126","endLine":63,"endColumn":25},{"ruleId":"123","severity":1,"message":"166","line":1,"column":10,"nodeType":"167","messageId":"126","endLine":1,"endColumn":14},{"ruleId":"123","severity":1,"message":"145","line":5,"column":17,"nodeType":"125","messageId":"126","endLine":5,"endColumn":23},{"ruleId":"123","severity":1,"message":"146","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":39,"column":25,"nodeType":"135","messageId":"153","endLine":39,"endColumn":27},{"ruleId":"123","severity":1,"message":"165","line":88,"column":21,"nodeType":"125","messageId":"126","endLine":88,"endColumn":25},{"ruleId":"123","severity":1,"message":"168","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":31,"column":7,"nodeType":"141","messageId":"163","endLine":35,"endColumn":8,"fix":"169"},{"ruleId":"123","severity":1,"message":"165","line":79,"column":21,"nodeType":"125","messageId":"126","endLine":79,"endColumn":25},{"ruleId":"123","severity":1,"message":"145","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":43,"column":9,"nodeType":"141","endLine":43,"endColumn":48},{"ruleId":"131","severity":1,"message":"170","line":63,"column":3,"nodeType":"125","endLine":63,"endColumn":12,"suggestions":"171"},{"ruleId":"131","severity":1,"message":"134","line":63,"column":13,"nodeType":"135","endLine":72,"endColumn":4},{"ruleId":"161","severity":1,"message":"162","line":80,"column":9,"nodeType":"141","messageId":"163","endLine":80,"endColumn":52,"fix":"172"},{"ruleId":"151","severity":1,"message":"173","line":86,"column":33,"nodeType":"135","messageId":"174","endLine":86,"endColumn":35},{"ruleId":"154","severity":1,"message":"158","line":87,"column":54,"nodeType":"156","messageId":"157","endLine":87,"endColumn":56},{"ruleId":"123","severity":1,"message":"145","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"131","severity":1,"message":"134","line":39,"column":13,"nodeType":"135","endLine":47,"endColumn":4},{"ruleId":"123","severity":1,"message":"175","line":48,"column":11,"nodeType":"125","messageId":"126","endLine":48,"endColumn":16},{"ruleId":"123","severity":1,"message":"176","line":75,"column":15,"nodeType":"125","messageId":"126","endLine":75,"endColumn":21},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRestaurants'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["179"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Button' is defined but never used.","'styles' is defined but never used.","'border' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ListView' is defined but never used.","'GridView' is defined but never used.","'MapView' is defined but never used.","'useRef' is defined but never used.","'createContext' is defined but never used.","'ReviewView' is defined but never used.","'ModeSet' is assigned a value but never used.","'Contents' is defined but never used.","'imgStyle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","'contentBoxStyle' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"180","text":"181"},"'Data' is assigned a value but never used.","'kako' is defined but never used.","Program","'style' is defined but never used.",{"range":"182","text":"181"},"React Hook useEffect contains a call to 'setReviews'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["183"],{"range":"184","text":"181"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'title' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},[1218,1218]," rel=\"noreferrer\"",[759,759],{"desc":"185","fix":"187"},[1778,1778],"Add dependencies array: []",{"range":"188","text":"189"},{"range":"190","text":"189"},[578,578],", []",[1510,1510]]